{"version":3,"sources":["HueContext.tsx","generateUID.js","useSteps.ts","Setup.tsx","queries/config.ts","Bridge.tsx","queries/lights.ts","Header.tsx","Accordion.tsx","AccordionSummary.tsx","HueIcon.ts","queries/groups.ts","Room.tsx","ProductIcon.tsx","Lights.tsx","queries/scenes.ts","Scenes.tsx","Battery.tsx","SensorCard.tsx","clip/v1/sensors.ts","queries/accessories.ts","Sensors.tsx","Switches.tsx","TabPanel.tsx","TabNav.tsx","App.tsx","API.ts","index.tsx"],"names":["HueContext","React","createContext","state","baseUrl","username","appname","initialize","disconnect","useHueContext","useContext","generateUID","firstPart","Math","random","secondPart","toString","slice","Steps","ConfirmationDialogRaw","props","onClose","open","other","useState","UID","setUID","useEffect","step","ip","fetch","then","d","json","bridges","length","setIp","internalipaddress","consent","setConsent","getTitle","useCallback","handleOk","method","body","JSON","stringify","devicetype","error","type","console","log","success","next","Content","Typography","FormControlLabel","control","Checkbox","required","checked","onChange","e","v","name","label","TextField","value","variant","target","FormHelperText","Dialog","disableEscapeKeyDown","maxWidth","DialogTitle","id","DialogContent","dividers","DialogActions","Button","disabled","onClick","color","useStyles","makeStyles","theme","createStyles","root","width","backgroundColor","palette","background","paper","maxHeight","ConfirmationDialog","classes","setOpen","setStep","keepMounted","newValue","useConfig","initialData","useMemo","query","useQuery","queryFn","response","ok","Error","config","data","useCardStyles","minWidth","title","fontSize","pos","marginBottom","float","Bridge","cardClasses","Card","className","CardContent","gutterBottom","component","modelid","mac","ipaddress","zigbeechannel","CardActions","style","alignItems","size","endIcon","Icon","window","confirm","useLights","queryClient","useQueryClient","refreshLights","invalidateQueries","queryKey","setBrightness","key","newval","bri","toggle","light","on","shutDown","lights","Header","textAlign","IconButton","outline","border","height","Accordion","withStyles","boxShadow","borderBottom","display","margin","expanded","MuiAccordion","AccordionSummary","minHeight","content","MuiAccordionSummary","hueToFa","hue","useGroups","elem","payload","any_on","groups","Room","Grid","container","Box","flexGrow","class","Switch","stopPropagation","inputProps","ProductIcon","icon","productname","ListItemIcon","Lights","setExpanded","getLights","roomLights","Object","keys","map","parseInt","filter","indexOf","square","newExpanded","AccordionDetails","List","si","ListItem","flexDirection","padding","ListItemText","primary","secondary","Slider","min","max","onChangeCommitted","val","Divider","marginTop","useScenes","activate","scene","scenes","getScenes","group","recycle","Scenes","Battery","level","roomToFa","room","iconStyle","paddingLeft","FooterChip","Chip","opacity","toUtc","date","Date","UTC","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","Sensor","buttonevent","diffToNow","model","lastupdated","diff","now","roundedMinutes","floor","hours","CardHeader","avatar","split","action","battery","subheader","justifyContent","alignContent","lightlevel","dark","temperature","toFixed","presence","switch","SENSOR_TYPES","groupSwitchesById","switches","dict","forEach","sensor","uniqueid","sensorGroupId","substring","groupSensorsById","sensors","create","useAccessories","Sensors","Paper","placeholder","Switches","TabPanel","children","index","role","tabs","route","wrapper","withRouter","getPathIndex","found","findIndex","t","location","pathname","AppBar","position","Tabs","event","history","push","scrollButtons","tab","ti","Tab","containerStyle","onChangeIndex","disableLazyLoading","animateTransitions","App","hueState","localStorage","getItem","setBaseUrl","setUsername","setAppname","useDefaultHueState","hueContext","token","createBaseUrl","setItem","clear","prefersDarkMode","useMediaQuery","createTheme","QueryClient","client","ThemeProvider","CssBaseline","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dbf0931a.chunk.js","sourcesContent":["import { createBaseUrl } from \"./API\";\n\nimport React from \"react\";\n\nexport interface IHueState {\n  baseUrl: string | false;\n  username: string | false;\n  appname: string | false;\n  setBaseUrl?: (ip: string) => void;\n  setAppname?: (a: string) => void;\n  setUsername?: (u: string) => void;\n}\n\nexport const useDefaultHueState = () => {\n  const [baseUrl, setBaseUrl] = React.useState<string | false>(\n    localStorage.getItem(\"baseUrl\") || false\n  );\n  const [username, setUsername] = React.useState<string | false>(\n    localStorage.getItem(\"username\") || false\n  );\n  const [appname, setAppname] = React.useState<string | false>(\n    localStorage.getItem(\"appname\") || false\n  );\n\n  return {\n    baseUrl,\n    setBaseUrl,\n    username,\n    setUsername,\n    appname,\n    setAppname,\n  };\n};\n\nexport interface IHueContext {\n  state: IHueState;\n  disconnect: () => void;\n  initialize: (ip: string, username: string, appname: string) => void;\n}\n\nexport const disconnect = (state: IHueState) => {\n  localStorage.clear();\n  state.setBaseUrl && state.setBaseUrl(\"\");\n  state.setUsername && state.setUsername(\"\");\n};\n\nexport const initialize = (\n  state: IHueState,\n  ip: string,\n  username: string,\n  appname: string\n) => {\n  const baseUrl = createBaseUrl(ip, username);\n  state.setBaseUrl && state.setBaseUrl(baseUrl);\n  state.setUsername && state.setUsername(username);\n  state.setAppname && state.setAppname(appname);\n  localStorage.setItem(\"baseUrl\", baseUrl);\n  localStorage.setItem(\"username\", username);\n  localStorage.setItem(\"appname\", appname);\n};\n\nexport const HueContext = React.createContext<IHueContext>({\n  state: {\n    baseUrl: false,\n    username: false,\n    appname: false,\n  },\n  initialize: () => {},\n  disconnect: () => {},\n});\n\nexport const useHueContext = () => React.useContext(HueContext);\n","function generateUID() {\n    // I generate the UID from two parts here \n    // to ensure the random number provide enough bits.\n    var firstPart = (Math.random() * 46656) | 0;\n    var secondPart = (Math.random() * 46656) | 0;\n    firstPart = (\"000\" + firstPart.toString(36)).slice(-3);\n    secondPart = (\"000\" + secondPart.toString(36)).slice(-3);\n    return firstPart + \"\" + secondPart;\n}\nexport default generateUID;","export const Steps = {\n  START: 0,\n  CONSENT: 1,\n  BRIDGE: 2,\n  CONNECT: 3,\n};\n\nexport const getStepTitle = (step: number) => {\n  if (step === Steps.START) {\n    return \"Setup\";\n  }\n  if (step === Steps.CONSENT) {\n    return \"Data Storage\";\n  }\n  if (step === Steps.BRIDGE) {\n    return \"Hue Bridge\";\n  }\n  if (step === Steps.CONNECT) {\n    return \"Finish\";\n  }\n  return null;\n};\n","import {\n  Checkbox,\n  FormHelperText,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport React from \"react\";\nimport generateUID from \"./generateUID\";\nimport { useHueContext } from \"./HueContext\";\nimport { getStepTitle, Steps } from \"./useSteps\";\n\nexport interface ConfirmationDialogRawProps {\n  classes: Record<\"paper\", string>;\n  id: string;\n  keepMounted: boolean;\n  open: boolean;\n  onClose: () => void;\n  step: number;\n  next: () => void;\n}\n\nfunction ConfirmationDialogRaw(props: ConfirmationDialogRawProps) {\n  const { onClose, open, ...other } = props;\n  const [UID, setUID] = React.useState<string>(generateUID());\n\n  React.useEffect(() => {\n    if (!open) setUID(generateUID);\n  }, [open]);\n\n  //\n  React.useEffect(() => {\n    if (props.step === Steps.BRIDGE && !ip && !state.baseUrl) {\n      fetch(\"https://discovery.meethue.com/\")\n        .then((d) => d.json())\n        .then((bridges) => {\n          if (bridges && bridges.length > 0) {\n            setIp(bridges[0].internalipaddress);\n          }\n        });\n    }\n  }, [props.step]);\n\n  const { initialize, state } = useHueContext();\n\n  const [consent, setConsent] = React.useState<boolean>(false);\n  const [ip, setIp] = React.useState<string>(\"\");\n\n  const getTitle = React.useCallback(() => {\n    return getStepTitle(props.step);\n  }, [props]);\n\n  const handleOk = React.useCallback(() => {\n    if (props.step === Steps.CONNECT && consent && ip) {\n      fetch(`http://${ip}/api`, {\n        method: \"post\",\n        body: JSON.stringify({ devicetype: \"hue-react#\" + UID }),\n      })\n        .then((d) => d.json())\n        .then((d) => {\n          if (d.length === 1 && d[0].error && d[0].error.type === 101) {\n            console.log(\"ALERT: press connect button! @todo\");\n          } else if (d.length > 0 && d[0].success && d[0].success.username) {\n            initialize(ip, d[0].success.username, \"hue-react#\" + UID);\n            onClose();\n          } else {\n            console.error(\"unknown case @todo\", d);\n          }\n        });\n    }\n    if (props.step === Steps.START) {\n      props.next();\n    }\n    if (props.step === Steps.CONSENT) {\n      props.next();\n    }\n    if (props.step === Steps.BRIDGE) {\n      props.next();\n    }\n  }, [props, UID, initialize, consent, ip, onClose]);\n\n  if (state.baseUrl) {\n    return null;\n  }\n\n  const Content = () => {\n    if (props.step === Steps.START) {\n      return (\n        <Typography>Press Continue to start the Connection Wizard.</Typography>\n      );\n    }\n    if (props.step === Steps.CONSENT) {\n      return (\n        <>\n          <Typography>\n            Your data belongs to you. We need your consent to store it on this\n            device.\n          </Typography>\n          <FormControlLabel\n            control={\n              <Checkbox\n                required\n                checked={consent}\n                onChange={(e, v) => setConsent(v)}\n                name=\"consent\"\n              />\n            }\n            label=\"Allow Data Storage\"\n          />\n        </>\n      );\n    }\n    if (props.step === Steps.BRIDGE) {\n      return (\n        <>\n          <TextField\n            label=\"\"\n            value={ip}\n            variant=\"outlined\"\n            onChange={(e) => setIp(e.target.value)}\n          />\n          <FormHelperText>\n            Enter the IP address of the Hue Bridge on your local network. Make\n            sure your device is connected to the same network.\n          </FormHelperText>\n        </>\n      );\n    }\n    if (props.step === Steps.CONNECT) {\n      return (\n        <>\n          <Typography>\n            Now press the \"Connect\" hardware button on your Hue Bridge, then\n            press \"Finish\" below.\n          </Typography>\n          <Typography>\n            This will request permissions for this app (<i> react-app-{UID} </i>\n            ) in your Hue Bridge.\n          </Typography>\n        </>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <Dialog\n      disableEscapeKeyDown\n      maxWidth=\"xs\"\n      aria-labelledby=\"confirmation-dialog-title\"\n      open={open}\n      {...other}\n    >\n      <DialogTitle id=\"confirmation-dialog-title\">{getTitle()}</DialogTitle>\n      <DialogContent dividers>\n        <Content />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          disabled={!consent && props.step === Steps.CONSENT}\n          onClick={handleOk}\n          color=\"primary\"\n        >\n          {props.step === Steps.CONNECT ? \"Finish\" : \"Continue\"}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n    paper: {\n      width: \"80%\",\n      maxHeight: 435,\n    },\n  })\n);\n\nexport default function ConfirmationDialog() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const {\n    state: { baseUrl },\n  } = useHueContext();\n\n  React.useEffect(() => {\n    if (!baseUrl && !open) {\n      setStep(Steps.START);\n      setOpen(true);\n    }\n  }, [baseUrl, open]);\n\n  const handleClose = (newValue?: string) => {\n    setOpen(false);\n  };\n\n  const [step, setStep] = React.useState(Steps.START);\n\n  return (\n    <ConfirmationDialogRaw\n      classes={{\n        paper: classes.paper,\n      }}\n      id=\"ringtone-menu\"\n      keepMounted\n      step={step}\n      next={() => setStep(step + 1)}\n      open={open}\n      onClose={handleClose}\n    />\n  );\n}\n","import { useHueContext } from \"../HueContext\";\nimport { useQuery } from \"react-query\";\nimport { useMemo } from \"react\";\nimport { Config } from \"../clip/v1/config\";\n\nconst useConfig = () => {\n  const {\n    state: { baseUrl },\n  } = useHueContext();\n  const initialData = useMemo(() => ({} as Config), []);\n  const query = useQuery<Config, any>(`${baseUrl}/config`, {\n    queryFn: async () => {\n      const response = await fetch(`${baseUrl}/config`);\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return response.json();\n    },\n    initialData,\n  });\n\n  return useMemo(\n    () => ({\n      config: query.data || initialData,\n    }),\n    [initialData, query]\n  );\n};\nexport default useConfig;\n","import Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { Icon } from \"@material-ui/core\";\nimport React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHueContext } from \"./HueContext\";\nimport useConfig from \"./queries/config\";\n\nconst useCardStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  label: {\n    float: \"left\",\n    width: 150,\n  },\n});\n\nconst Bridge = () => {\n  const {\n    state: { appname },\n    disconnect,\n  } = useHueContext();\n  const { config } = useConfig();\n  const cardClasses = useCardStyles();\n  return (\n    <>\n      <Card className={cardClasses.root} variant=\"outlined\">\n        <CardContent>\n          <Typography\n            className={cardClasses.title}\n            color=\"textSecondary\"\n            gutterBottom\n          >\n            Connected with Hue Bridge\n          </Typography>\n          <Typography variant=\"h5\" component=\"h2\">\n            {config.name}\n          </Typography>\n          <Typography className={cardClasses.pos} color=\"textSecondary\">\n            Model: {config.modelid}\n          </Typography>\n          <Typography variant=\"body2\" component=\"div\">\n            <span className={cardClasses.label}>Mac Address</span>\n            {config.mac}\n            <br />\n            <span className={cardClasses.label}>IP Address</span>\n            {config.ipaddress}\n            <br />\n            <span className={cardClasses.label}>Zigbee Channel</span>\n            {config.zigbeechannel}\n            <br />\n            <span className={cardClasses.label}>App Name</span>\n            {appname || \"\"}\n            <br />\n          </Typography>\n        </CardContent>\n        <CardActions style={{ alignItems: \"right\" }}>\n          <Button\n            style={{ float: \"right\" }}\n            size=\"small\"\n            endIcon={<Icon className=\"fa fa-trash\" />}\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => {\n              if (window.confirm(\"disconnect from bridge and delete data?\")) {\n                disconnect();\n              }\n            }}\n          >\n            Disconnect\n          </Button>\n        </CardActions>\n      </Card>\n    </>\n  );\n};\n\nexport default Bridge;\n","import { useMemo } from \"react\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport { RawLightsResponse } from \"../clip/v1/lights\";\nimport { useHueContext } from \"../HueContext\";\n\nconst useLights = () => {\n  const {\n    state: { baseUrl },\n  } = useHueContext();\n  const queryClient = useQueryClient();\n  const initialData = {} as RawLightsResponse;\n  const query = useQuery<RawLightsResponse, any>(`${baseUrl}/lights`, {\n    queryFn: async () => {\n      const response = await fetch(`${baseUrl}/lights`);\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return response.json();\n    },\n    initialData,\n  });\n\n  const refreshLights = () =>\n    queryClient.invalidateQueries({ queryKey: `${baseUrl}/lights` });\n\n  const setBrightness = async (key: string, newval: number) => {\n    await fetch(`${baseUrl}/lights/${key}/state`, {\n      method: \"put\",\n      body: JSON.stringify({ bri: newval }),\n    });\n    refreshLights();\n  };\n\n  const toggle = async (light: any) => {\n    await fetch(`${baseUrl}/lights/${light.key}/state`, {\n      method: \"put\",\n      body: JSON.stringify({ on: !light.state.on }),\n    });\n    refreshLights();\n  };\n\n  const shutDown = async () => {\n    await fetch(`${baseUrl}/groups/0/action`, {\n      method: \"put\",\n      body: JSON.stringify({ on: false }),\n    });\n    refreshLights();\n  };\n\n  return useMemo(\n    () => ({\n      lights: query.data || initialData,\n      setBrightness,\n      toggle,\n      shutDown,\n    }),\n    [query, initialData, setBrightness, toggle, shutDown]\n  );\n};\nexport default useLights;\n","import { Icon, IconButton } from \"@material-ui/core\";\nimport useLights from \"./queries/lights\";\n\nconst Header = () => {\n  const { shutDown } = useLights();\n  return (\n    <div style={{ width: \"100%\", textAlign: \"center\" }}>\n      <IconButton\n        color=\"secondary\"\n        style={{\n          outline: \"none\",\n          border: \"none\",\n          width: 50,\n          height: 50,\n          fontSize: \"2em\",\n        }}\n        onClick={() => shutDown()}\n      >\n        <Icon className={\"fa fa-power-off\"} />\n      </IconButton>\n    </div>\n  );\n};\n\nexport default Header;\n","import MuiAccordion from \"@material-ui/core/Accordion\";\nimport { withStyles } from \"@material-ui/core\";\n\nconst Accordion = withStyles({\n  root: {\n    border: \"1px solid rgba(0, 0, 0, .125)\",\n    boxShadow: \"none\",\n    \"&:not(:last-child)\": {\n      borderBottom: 0,\n    },\n    \"&:before\": {\n      display: \"none\",\n    },\n    \"&$expanded\": {\n      margin: \"auto\",\n    },\n  },\n  expanded: {},\n})(MuiAccordion);\n\nexport default Accordion;\n","import MuiAccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport { withStyles } from \"@material-ui/core\";\n\nconst AccordionSummary = withStyles({\n  root: {\n    backgroundColor: \"rgba(0, 0, 0, .03)\",\n    borderBottom: \"1px solid rgba(0, 0, 0, .125)\",\n    marginBottom: -1,\n    minHeight: 56,\n    \"&$expanded\": {\n      minHeight: 56,\n    },\n  },\n  content: {\n    \"&$expanded\": {\n      margin: \"12px 0\",\n    },\n  },\n  expanded: {},\n})(MuiAccordionSummary);\n\nexport default AccordionSummary;\n","export const hueToFa = (hue: string) => {\n  //@todo move to json config\n  switch (hue) {\n    case \"Living room\":\n      return \"fa-tv\";\n    case \"Bathroom\":\n      return \"fa-toilet-paper\";\n    case \"Bedroom\":\n      return \"fa-bed\";\n    case \"Balcony\":\n      return \"fa-tree\";\n    case \"Garden\":\n      return \"fa-seedling\";\n    case \"Kitchen\":\n      return \"fa-coffee\";\n    case \"Front door\":\n      return \"fa-shoe-prints\";\n    case \"Reading\":\n      return \"fa-laptop-house\";\n  }\n  console.error(\"no icon for class:\" + hue);\n};\n","import { useHueContext } from \"../HueContext\";\nimport { useQuery } from \"react-query\";\nimport { GroupsResponse } from \"../clip/v1/groups\";\nimport { useCallback, useMemo } from \"react\";\n\nconst useGroups = () => {\n  const {\n    state: { baseUrl },\n  } = useHueContext();\n  const initialData = useMemo(() => ({} as GroupsResponse), []);\n  const query = useQuery<GroupsResponse, any>(`${baseUrl}/groups`, {\n    queryFn: async () => {\n      const response = await fetch(`${baseUrl}/groups`);\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return response.json();\n    },\n    initialData,\n  });\n\n  const toggle = useCallback(\n    (elem: any) => {\n      const payload = { on: !elem.state.any_on };\n      // @todo move to api\n      fetch(`${baseUrl}/groups/${elem.key}/action`, {\n        method: \"put\",\n        body: JSON.stringify(payload),\n      });\n    },\n    [baseUrl]\n  );\n\n  return useMemo(\n    () => ({\n      groups: query.data || initialData,\n      toggle,\n    }),\n    [initialData, query, toggle]\n  );\n};\nexport default useGroups;\n","import { Box, Grid, Icon, Switch, Typography } from \"@material-ui/core\";\nimport AccordionSummary from \"./AccordionSummary\";\nimport { hueToFa } from \"./HueIcon\";\nimport { GroupsResponseObj } from \"./clip/v1/groups\";\nimport useGroups from \"./queries/groups\";\n\nconst Room = ({ elem }: { elem: GroupsResponseObj }) => {\n  const { toggle } = useGroups();\n  return (\n    <AccordionSummary aria-controls=\"panel1d-content\" id=\"panel1d-header\">\n      <Grid style={{ width: \"100%\" }} container>\n        <Box display=\"flex\" flexGrow={1} style={{ margin: \"auto\" }}>\n          <Icon className={`fa ${hueToFa(elem.class)}`} style={{ width: 45 }} />\n          <Typography>{elem.name}</Typography>\n        </Box>\n        <Box>\n          <Switch\n            checked={elem.state.any_on}\n            onClick={(e) => e.stopPropagation()}\n            onChange={(e) => {\n              e.stopPropagation();\n              toggle(elem);\n            }}\n            color=\"primary\"\n            inputProps={{ \"aria-label\": \"primary checkbox\" }}\n          />\n        </Box>\n      </Grid>\n    </AccordionSummary>\n  );\n};\n\nexport default Room;\n","import { ListItemIcon } from \"@material-ui/core\";\n\nconst productToIcon = (icon: string) => {\n  if (icon === \"On/Off plug\") return \"fa fa-plug\";\n  if (icon === \"Hue lightstrip plus\") return \"fa fa-tape\";\n  if (icon === \"Hue color candle\") return \"fa fa-fire\";\n  if (icon === \"Hue color lamp\") return \"fas fa-lightbulb\";\n  if (icon === \"Hue color spot\") return \"fas fa-lightbulb\";\n  return \"far fa-lightbulb\";\n};\n\nconst ProductIcon = ({ productname }: { productname: string }) => {\n  return (\n    <ListItemIcon\n      style={{ fontSize: \"1.5em\", margin: \"auto\" }}\n      className={productToIcon(productname)}\n    />\n  );\n};\n\nexport default ProductIcon;\n","import {\n  AccordionDetails,\n  Box,\n  Divider,\n  List,\n  ListItem,\n  ListItemText,\n  Slider,\n  Switch,\n} from \"@material-ui/core\";\n\nimport Accordion from \"./Accordion\";\nimport React from \"react\";\nimport Room from \"./Room\";\nimport useLights from \"./queries/lights\";\nimport ProductIcon from \"./ProductIcon\";\nimport useGroups from \"./queries/groups\";\n\nconst Lights = () => {\n  const [expanded, setExpanded] = React.useState<number | false>(false);\n  const { groups } = useGroups();\n  const { lights, toggle, setBrightness } = useLights();\n\n  const getLights = React.useCallback(\n    (roomLights: string[], id: string) => {\n      return Object.keys(lights)\n        .map((key: string) => ({\n          key,\n          ...lights[parseInt(key)],\n        }))\n        .filter((light) => roomLights.indexOf(`${light.key}`) > -1);\n    },\n    [lights]\n  );\n\n  return (\n    <>\n      {Object.keys(groups)\n        .map((key) => ({ key: key, ...groups[parseInt(key)] }))\n        .map((elem, id) =>\n          !elem || !elem.state ? null : (\n            <Accordion\n              key={id}\n              square\n              expanded={expanded === parseInt(elem.key)}\n              onChange={(e, newExpanded) =>\n                setExpanded(newExpanded ? parseInt(elem.key) : false)\n              }\n            >\n              <Room elem={elem} />\n              <AccordionDetails>\n                <List\n                  aria-label=\"secondary\"\n                  color=\"default\"\n                  style={{\n                    width: \"100%\",\n                    fontSize: \"1.25em\",\n                  }}\n                >\n                  {getLights(elem.lights, elem.key).map((light, si) => (\n                    <>\n                      <ListItem\n                        key={si}\n                        style={{\n                          flexDirection: \"column\",\n                          margin: 0,\n                          padding: 0,\n                        }}\n                      >\n                        <Box width=\"100%\" display=\"flex\" flexDirection=\"row\">\n                          <Box display=\"flex\" flexGrow={1}>\n                            <ProductIcon productname={light.productname} />\n                            <ListItemText\n                              primary={light.name}\n                              secondary={light.productname}\n                            />\n                          </Box>\n                          <Box>\n                            <Switch\n                              size=\"small\"\n                              checked={!!light.state.on}\n                              onChange={() => toggle(light)}\n                            />\n                          </Box>\n                        </Box>\n\n                        {light.state.bri && (\n                          <Slider\n                            disabled={!light.state.on}\n                            min={1}\n                            max={254}\n                            value={light.state.bri}\n                            onChangeCommitted={(e, val) =>\n                              setBrightness(light.key, val as any)\n                            }\n                            aria-labelledby=\"continuous-slider\"\n                          />\n                        )}\n                      </ListItem>\n                      {!light.state.bri && (\n                        <Divider style={{ marginBottom: 13, marginTop: 14 }} />\n                      )}\n                    </>\n                  ))}\n                </List>\n              </AccordionDetails>\n            </Accordion>\n          )\n        )}\n    </>\n  );\n};\nexport default Lights;\n","import { useHueContext } from \"../HueContext\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport { useCallback, useMemo } from \"react\";\n\nconst useScenes = () => {\n  const queryClient = useQueryClient();\n  const {\n    state: { baseUrl },\n  } = useHueContext();\n  const initialData = {} as any;\n  const query = useQuery<any, any>(`${baseUrl}/scenes`, {\n    queryFn: async () => {\n      const response = await fetch(`${baseUrl}/scenes`);\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return response.json();\n    },\n    initialData,\n  });\n\n  const activate = useCallback(\n    async (scene: any, id: string) => {\n      const payload = { scene: scene.key };\n      await fetch(`${baseUrl}/groups/${id}/action`, {\n        method: \"put\",\n        body: JSON.stringify(payload),\n      });\n      queryClient.invalidateQueries({ queryKey: `${baseUrl}/scenes` });\n      //@todo update lights and rooms?\n    },\n    [baseUrl]\n  );\n\n  return useMemo(\n    () => ({\n      scenes: query.data || initialData,\n      activate,\n    }),\n    [initialData, query]\n  );\n};\nexport default useScenes;\n","import {\n  AccordionDetails,\n  Box,\n  Button,\n  Divider,\n  List,\n  ListItem,\n  ListItemText,\n} from \"@material-ui/core\";\n\nimport Accordion from \"./Accordion\";\nimport React from \"react\";\nimport Room from \"./Room\";\nimport useGroups from \"./queries/groups\";\nimport useScenes from \"./queries/scenes\";\n\nconst getScenes = (scenes: any, id: string) => {\n  return Object.keys(scenes)\n    .map((key) => ({\n      key,\n      ...scenes[key],\n    }))\n    .filter(\n      (scene) =>\n        scene.group &&\n        scene.group === id &&\n        scene.type === \"GroupScene\" &&\n        !scene.recycle\n    );\n};\n\nconst Scenes = () => {\n  const [expanded, setExpanded] = React.useState<number | false>(false);\n  const { scenes, activate } = useScenes();\n  const { groups } = useGroups();\n\n  return (\n    <>\n      {Object.keys(groups)\n        .map((key) => ({ key: key, ...groups[parseInt(key)] }))\n        .map((elem, id) =>\n          !elem || !elem.state ? null : (\n            <Accordion\n              key={id}\n              square\n              expanded={expanded === parseInt(elem.key)}\n              onChange={(e, newExpanded) =>\n                setExpanded(newExpanded ? parseInt(elem.key) : false)\n              }\n            >\n              <Room elem={elem} />\n              <AccordionDetails>\n                <List\n                  aria-label=\"secondary\"\n                  color=\"default\"\n                  style={{\n                    width: \"100%\",\n                    fontSize: \"1.25em\",\n                  }}\n                >\n                  {getScenes(scenes, elem.key).map((scene, si) => (\n                    <>\n                      <ListItem\n                        key={si}\n                        style={{\n                          flexDirection: \"column\",\n                          margin: 0,\n                          padding: 0,\n                        }}\n                      >\n                        <Box width=\"100%\" display=\"flex\" flexDirection=\"row\">\n                          <Box display=\"flex\" flexGrow={1}>\n                            <ListItemText primary={scene.name} />\n                          </Box>\n                          <Box>\n                            <Button\n                              size=\"small\"\n                              variant=\"outlined\"\n                              onClick={() => activate(scene, elem.key)}\n                            >\n                              Activate\n                            </Button>\n                          </Box>\n                        </Box>\n                      </ListItem>\n                      <Divider style={{ marginBottom: 13, marginTop: 14 }} />\n                    </>\n                  ))}\n                </List>\n              </AccordionDetails>\n            </Accordion>\n          )\n        )}\n    </>\n  );\n};\nexport default Scenes;\n","import \"./battery.scss\";\n\nimport React from \"react\";\n\nconst Battery = (props: { level: number }) => {\n  return (\n    <div style={{ margin: \"auto\" }}>\n      <div className=\"battery\">\n        <div\n          className=\"battery-level\"\n          style={{ height: props.level + \"%\" }}\n        ></div>\n      </div>\n    </div>\n  );\n};\nexport default Battery;\n","import {\n  Box,\n  Card,\n  CardActions,\n  CardHeader,\n  Chip,\n  Icon,\n} from \"@material-ui/core\";\n\nimport Battery from \"./Battery\";\nimport React from \"react\";\nimport { Sensor as AbstractSensor } from \"./clip/v1/sensors\";\n\n//@todo move to json\nconst roomToFa = (room: string) => {\n  switch (room) {\n    case \"Living\":\n    case \"Living room\":\n      return \"fa-tv\";\n    case \"Bathroom\":\n    case \"Bath\":\n      return \"fa-toilet-paper\";\n    case \"Bed\":\n    case \"Bedroom\":\n      return \"fa-bed\";\n    case \"Balcony\":\n      return \"fa-tree\";\n    case \"Plants\":\n    case \"Greenhouse\":\n      return \"fa-seedling\";\n    case \"Kitchen\":\n      return \"fa-coffee\";\n    case \"Entrance\":\n    case \"entrance\":\n      return \"fa-shoe-prints\";\n    case \"Office\":\n    case \"Bib\":\n      return \"fa-laptop-house\";\n  }\n  console.error(\"no icon for room:\" + room);\n};\n\nconst iconStyle = {\n  width: \"auto\",\n  height: \"auto\",\n  margin: \"auto\",\n  fontSize: \"0.8em\",\n  paddingLeft: \"10px\",\n};\n\nconst FooterChip = (props: {\n  icon: string;\n  label: number | string;\n  opacity?: number;\n}) => {\n  return (\n    <Chip\n      style={{ backgroundColor: `rgba(144,202,253,${props.opacity})` }}\n      variant=\"outlined\"\n      size=\"small\"\n      icon={<Icon style={iconStyle} className={`fa fa-${props.icon}`} />}\n      label={props.label}\n    />\n  );\n};\n\nconst toUtc = (date: any) => {\n  var now_utc = Date.UTC(\n    date.getUTCFullYear(),\n    date.getUTCMonth(),\n    date.getUTCDate(),\n    date.getUTCHours(),\n    date.getUTCMinutes(),\n    date.getUTCSeconds()\n  );\n\n  return now_utc;\n};\n\nconst Sensor = (props: {\n  //@todo use Device class\n  model: {\n    model: AbstractSensor;\n    light: AbstractSensor;\n    temperature: AbstractSensor;\n    presence: AbstractSensor;\n    switch: AbstractSensor;\n  };\n}) => {\n  //@todo use bridge-timezone from API to correct calculation?\n  const diffToNow = React.useCallback(() => {\n    if (!props.model.model) return null;\n    const then = new Date(props.model?.model?.state?.lastupdated);\n\n    const now_utc = toUtc(new Date(Date.now()));\n    const diff = now_utc - toUtc(then);\n    //@todo why utc doesn't work? remove - 60 minutes hack\n    const roundedMinutes = Math.floor(diff / 1000 / 60) - 60;\n\n    if (roundedMinutes >= 60) {\n      const hours = Math.floor(roundedMinutes / 60);\n      if (hours > 24) {\n        const days = Math.floor(hours / 24);\n        return days + \" days ago\";\n      }\n      return hours + \" hours ago\";\n    }\n    if (roundedMinutes === 0) {\n      return \"now\";\n    }\n    if (roundedMinutes === 1) {\n      return \"1 minute ago\";\n    }\n    return roundedMinutes + \" minutes ago\";\n  }, [props]);\n\n  const buttonEventToStr = (buttonevent: number) => {\n    if (buttonevent === 1002) return \"on\";\n    if (buttonevent === 2002) return \"dim +\";\n    if (buttonevent === 3002) return \"dim -\";\n    if (buttonevent === 4002) return \"off\";\n    //@todo map tap switch button events\n    return \"\";\n  };\n\n  return (\n    <Card variant=\"outlined\">\n      <CardHeader\n        avatar={\n          <Icon\n            style={{ margin: \"auto\", width: \"auto\" }}\n            className={\"fa \" + roomToFa(props.model?.model?.name.split(\" \")[0])}\n          />\n        }\n        title={props.model.model.name}\n        action={\n          props.model?.model?.config?.battery ? (\n            <Battery level={props.model.model.config.battery} />\n          ) : null\n        }\n        subheader={diffToNow()}\n      />\n\n      <CardActions>\n        <Box\n          width=\"100%\"\n          display=\"flex\"\n          justifyContent=\"space-between\"\n          alignContent=\"center\"\n        >\n          {props.model.light?.state?.lightlevel && (\n            <Box>\n              <FooterChip\n                icon={props.model.light?.state.dark ? \"moon\" : \"sun\"}\n                label={props.model.light?.state?.lightlevel}\n                opacity={props.model.light?.state?.lightlevel / 33000}\n              />\n            </Box>\n          )}\n          {props.model.temperature?.state?.temperature && (\n            <Box>\n              <FooterChip\n                icon=\"thermometer\"\n                label={`${(\n                  props.model.temperature.state.temperature / 100\n                ).toFixed(2)}°C`}\n              />\n            </Box>\n          )}\n          {props.model.presence?.state && (\n            <Box>\n              {props.model.presence?.state?.presence && (\n                <FooterChip icon=\"eye\" label=\"Presence\" />\n              )}\n              {!props.model.presence?.state?.presence && (\n                <FooterChip icon=\"eye-slash\" label=\"No presence\" />\n              )}\n            </Box>\n          )}\n\n          {props.model.switch?.state?.buttonevent && (\n            <Box>\n              {props.model.switch?.state?.buttonevent && (\n                <FooterChip\n                  icon=\"hand-point-down\"\n                  label={\n                    \"last button pressed: \" +\n                    buttonEventToStr(props.model.switch?.state?.buttonevent)\n                  }\n                />\n              )}\n            </Box>\n          )}\n        </Box>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default Sensor;\n","export interface Sensor {\n  key: string;\n  state: State;\n  config: Config;\n  name: string;\n  type: string;\n  modelid: string;\n  manufacturername: string;\n  swversion: string;\n  uniqueid: string;\n  recycle?: boolean;\n  swupdate: Swupdate;\n  productname: string;\n  diversityid: string;\n  capabilities: Capabilities;\n}\n\nexport const SENSOR_TYPES = {\n  Daylight: \"Daylight\",\n  LightLevel: \"ZLLLightLevel\",\n  Temperature: \"ZLLTemperature\",\n  Presence: \"ZLLPresence\",\n  Generic: \"CLIPGenericStatus\",\n  TapSwitch: \"ZGPSwitch\",\n  DimmerSwitch: \"ZLLSwitch\",\n};\n\n//keep the enum\n//sensors must be merged into devices\n//invent the device model with its specific incarnations\n//Motion Detector with Presence Sensor and Temperature Sensor\n//Dimmer Switch and Tap Switch\n//keep the interface expandable\n\nexport interface SensorRootObject {\n  [id: string]: Sensor;\n}\n\nexport interface Capabilities {\n  certified: boolean;\n  primary: boolean;\n  inputs: Input[];\n}\n\nexport interface Input {\n  repeatintervals: number[];\n  events: Event[];\n}\n\nexport interface Swupdate {\n  state: string;\n  lastinstall?: Date;\n}\n\nexport interface Event {\n  buttonevent: number;\n  eventtype: string;\n}\n\nexport interface Config {\n  on: boolean;\n  configured: boolean;\n  battery?: number;\n  pending: any[];\n  reachable?: boolean;\n  usertest?: boolean;\n  sunriseoffset: number;\n  sunsetoffset: number;\n  sensitivity?: number;\n  sensitivitymax?: number;\n  alert: string;\n  ledindication?: boolean;\n  tholddark?: number;\n  tholdoffset?: number;\n}\n\nexport interface State {\n  lastupdated: any;\n  flag?: boolean;\n  status?: number;\n  dark?: boolean;\n  presence: boolean;\n  temperature: number;\n  daylight: boolean;\n  lightlevel: number;\n  buttonevent: number;\n}\n","import { useHueContext } from \"../HueContext\";\nimport { useQuery } from \"react-query\";\nimport { useMemo } from \"react\";\nimport { SensorRootObject, SENSOR_TYPES } from \"../clip/v1/sensors\";\n\n//@todo map to devices instead\nconst groupSwitchesById = (switches: any) => {\n  const dict: { [name: string]: any } = {};\n  Object.keys(switches)\n    .map((key) => switches[parseInt(key)])\n    .forEach((sensor) => {\n      if (sensor && sensor.uniqueid) {\n        const sensorGroupId = sensor.uniqueid.substring(0, 26);\n\n        const create = () => {\n          if (!dict[sensorGroupId]) {\n            dict[sensorGroupId] = {};\n          }\n        };\n        if (\n          sensor.type === SENSOR_TYPES.DimmerSwitch ||\n          sensor.type === SENSOR_TYPES.TapSwitch\n        ) {\n          create();\n          dict[sensorGroupId].model = sensor;\n          dict[sensorGroupId].switch = sensor;\n        }\n      }\n    });\n\n  return dict;\n};\n\n//@todo map to devices instead\nconst groupSensorsById = (sensors: any) => {\n  const dict: { [name: string]: any } = {};\n  Object.keys(sensors)\n    .map((key) => sensors[parseInt(key)])\n    .forEach((sensor) => {\n      if (sensor && sensor.uniqueid) {\n        const sensorGroupId = sensor.uniqueid.substring(0, 26);\n\n        const create = () => {\n          if (!dict[sensorGroupId]) {\n            dict[sensorGroupId] = {};\n          }\n        };\n\n        //@todo exclude CLIPGenericStatus sensors\n        //@todo ignore DayLightSensor\n\n        if (sensor.type === SENSOR_TYPES.Temperature) {\n          create();\n          dict[sensorGroupId].temperature = sensor;\n        }\n        if (sensor.type === SENSOR_TYPES.LightLevel) {\n          create();\n          dict[sensorGroupId].light = sensor;\n        }\n        if (sensor.type === SENSOR_TYPES.Presence) {\n          create();\n          dict[sensorGroupId].model = sensor;\n          dict[sensorGroupId].name = sensor.name;\n          dict[sensorGroupId].presence = sensor;\n        }\n      }\n    });\n  return dict;\n};\n\nconst useAccessories = () => {\n  const {\n    state: { baseUrl },\n  } = useHueContext();\n  const initialData = useMemo(() => ({} as SensorRootObject), []);\n  const query = useQuery<SensorRootObject, any>(`${baseUrl}/sensors`, {\n    queryFn: async () => {\n      const response = await fetch(`${baseUrl}/sensors`);\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return response.json();\n    },\n    initialData,\n  });\n\n  return useMemo(\n    () => ({\n      sensors: groupSensorsById(query.data || initialData),\n      switches: groupSwitchesById(query.data || initialData),\n    }),\n    [initialData, query]\n  );\n};\nexport default useAccessories;\n","import { Paper } from \"@material-ui/core\";\nimport Sensor from \"./SensorCard\";\nimport useAccessories from \"./queries/accessories\";\n\nconst Sensors = () => {\n  const { sensors } = useAccessories();\n  return (\n    <Paper placeholder=\"loading\">\n      {Object.keys(sensors)\n        .map((key) => sensors[key])\n        .map((sensor, si) => (\n          <Sensor key={si} model={sensor} />\n        ))}\n    </Paper>\n  );\n};\n\nexport default Sensors;\n","import { Paper } from \"@material-ui/core\";\nimport Sensor from \"./SensorCard\";\nimport useAccessories from \"./queries/accessories\";\n\nconst Switches = () => {\n  const { switches } = useAccessories();\n  return (\n    <Paper placeholder=\"loading\">\n      {Object.keys(switches)\n        .map((key) => switches[key])\n        .map((sensor, si) => (\n          <Sensor key={si} model={sensor} />\n        ))}\n    </Paper>\n  );\n};\n\nexport default Switches;\n","import { Box } from \"@material-ui/core\";\nimport React from \"react\";\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, index, ...other } = props;\n\n  return (\n    <div\n      style={{ height: \"100%\" }}\n      role=\"tabpanel\"\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      <Box>{children}</Box>\n    </div>\n  );\n}\n\nexport default TabPanel;\n","import { AppBar, Icon, Theme, makeStyles } from \"@material-ui/core\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\n\nimport Bridge from \"./Bridge\";\nimport Header from \"./Header\";\nimport Lights from \"./Lights\";\nimport React from \"react\";\nimport Scenes from \"./Scenes\";\nimport Sensors from \"./Sensors\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport Switches from \"./Switches\";\nimport Tab from \"@material-ui/core/Tab\";\nimport TabPanel from \"./TabPanel\";\nimport Tabs from \"@material-ui/core/Tabs\";\n\nconst tabs = [\n  { icon: \"fa-photo-video\", label: \"Scenes\", route: \"/Scenes\" },\n  { icon: \"fa-lightbulb\", label: \"Lights\", route: \"/Lights\" },\n  { icon: \"fa-random\", label: \"Switches\", route: \"/Switches\" },\n  { icon: \"fa-thermometer-half\", label: \"Sensors\", route: \"/Sensors\" },\n  { icon: \"fa-plug\", label: \"Bridge\", route: \"/Bridge\" },\n];\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  wrapper: {\n    flexDirection: \"row\",\n  },\n}));\n\nfunction TabNav(props: RouteComponentProps<any>) {\n  const getPathIndex = React.useCallback(() => {\n    const found = tabs.findIndex((t) => t.route === props.location.pathname);\n    return found > 0 ? found : 0;\n  }, [props]);\n\n  const handleTabChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    props.history.push(tabs[newValue].route);\n    //@todo refresh\n  };\n\n  const handleSwipeTab = (newValue: number) => {\n    props.history.push(tabs[newValue].route);\n    //@todo refresh\n  };\n\n  const classes = useStyles();\n\n  return (\n    <div\n      style={{\n        width: \"100vw\",\n        maxWidth: 400,\n        margin: \"auto\",\n        height: \"100vh\",\n      }}\n    >\n      <AppBar position=\"static\" color=\"default\">\n        <Header />\n        <Tabs\n          onChange={handleTabChange}\n          scrollButtons=\"auto\"\n          variant=\"scrollable\"\n          className={classes.wrapper}\n          value={getPathIndex()}\n        >\n          {tabs.map((tab, ti) => (\n            <Tab\n              key={ti}\n              style={{ fontSize: \"0.9em\", width: 85 }}\n              icon={<Icon className={\"fa \" + tab.icon} />}\n              label={tab.label}\n            />\n          ))}\n        </Tabs>\n      </AppBar>\n      <SwipeableViews\n        style={{ height: \"100%\" }}\n        containerStyle={{ height: \"100%\" }}\n        index={getPathIndex()}\n        onChangeIndex={handleSwipeTab}\n        disableLazyLoading\n        animateTransitions={false}\n      >\n        <TabPanel index={0}>\n          <Scenes />\n        </TabPanel>\n        <TabPanel index={1}>\n          <Lights />\n        </TabPanel>\n        <TabPanel index={2}>\n          <Switches />\n        </TabPanel>\n        <TabPanel index={3}>\n          <Sensors />\n        </TabPanel>\n        <TabPanel index={4}>\n          <Bridge />\n        </TabPanel>\n      </SwipeableViews>\n    </div>\n  );\n}\n\nexport default withRouter(TabNav);\n","import { CssBaseline, ThemeProvider, createTheme } from \"@material-ui/core\";\nimport {\n  HueContext,\n  disconnect,\n  initialize,\n  useDefaultHueState,\n} from \"./HueContext\";\n\nimport { BrowserRouter } from \"react-router-dom\";\nimport ConfirmationDialog from \"./Setup\";\nimport React from \"react\";\nimport TabNav from \"./TabNav\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nfunction App() {\n  const hueState = useDefaultHueState();\n  const hueContext = {\n    state: hueState,\n    initialize: (ip: string, username: string, appname: string) =>\n      initialize(hueState, ip, username, appname),\n    disconnect: () => disconnect(hueState),\n  };\n\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n  const theme = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          type: prefersDarkMode ? \"dark\" : \"light\",\n        },\n      }),\n    [prefersDarkMode]\n  );\n  const queryClient = new QueryClient();\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <HueContext.Provider value={hueContext}>\n          <BrowserRouter>\n            {hueContext.state.baseUrl && <TabNav />}\n            <ConfirmationDialog />\n          </BrowserRouter>\n        </HueContext.Provider>\n      </ThemeProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","export const createBaseUrl = (ip: string, token: string) =>\n  `http://${ip}/api/${token}`;\n","import App from \"./App\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}