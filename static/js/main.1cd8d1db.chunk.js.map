{"version":3,"sources":["HueContext.tsx","generateUID.js","useSteps.ts","Setup.tsx","queries/config.ts","Bridge.tsx","queries/lights.ts","Header.tsx","Accordion.tsx","AccordionSummary.tsx","HueIcon.ts","queries/groups.ts","Room.tsx","ProductIcon.tsx","queries/scenes.ts","domain/models.ts","components/BrightnessSlider.tsx","components/LightSwitch.tsx","Lights.tsx","Scenes.tsx","Battery.tsx","SensorCard.tsx","clip/v1/sensors.ts","queries/accessories.ts","Sensors.tsx","Switches.tsx","TabPanel.tsx","TabNav.tsx","App.tsx","clip/v1/createBaseUrl.ts","index.tsx"],"names":["HueContext","React","createContext","state","baseUrl","username","appname","initialize","disconnect","useHueContext","useContext","generateUID","firstPart","Math","random","secondPart","toString","slice","Steps","ConfirmationDialogRaw","props","onClose","open","other","useState","UID","setUID","useEffect","step","ip","fetch","then","d","json","bridges","length","setIp","internalipaddress","consent","setConsent","getTitle","useCallback","handleOk","method","body","JSON","stringify","devicetype","error","type","console","log","success","next","Content","Typography","FormControlLabel","control","Checkbox","required","checked","onChange","e","v","name","label","TextField","value","variant","target","FormHelperText","Dialog","disableEscapeKeyDown","maxWidth","DialogTitle","id","DialogContent","dividers","DialogActions","Button","disabled","onClick","color","useStyles","makeStyles","theme","createStyles","root","width","backgroundColor","palette","background","paper","maxHeight","ConfirmationDialog","classes","setOpen","setStep","keepMounted","newValue","useConfig","initialData","useMemo","query","useQuery","queryFn","response","ok","Error","config","data","useCardStyles","minWidth","title","fontSize","pos","marginBottom","float","Bridge","cardClasses","Card","className","CardContent","gutterBottom","component","modelid","mac","ipaddress","zigbeechannel","CardActions","style","alignItems","size","endIcon","Icon","window","confirm","useLights","queryClient","useQueryClient","cacheTime","refreshLights","refetchQueries","queryKey","putJson","url","setBrightness","key","newval","bri","toggle","light","on","shutDown","lights","Header","textAlign","IconButton","outline","border","height","Accordion","withStyles","boxShadow","borderBottom","display","margin","expanded","MuiAccordion","AccordionSummary","minHeight","content","MuiAccordionSummary","hueToFa","hue","useGroups","refreshGroups","elem","payload","any_on","groups","Room","room","Grid","container","Box","flexGrow","class","Switch","stopPropagation","inputProps","ProductIcon","icon","productname","ListItemIcon","useScenes","activate","scene","group","scenes","useRooms","Object","keys","map","k","parseInt","l","filter","s","recycle","BrightnessSlider","Slider","min","max","onChangeCommitted","val","LightSwitch","Lights","setExpanded","rooms","square","newExpanded","AccordionDetails","List","Fragment","ListItem","flexDirection","padding","ListItemText","primary","secondary","Divider","marginTop","Scenes","Battery","level","roomToFa","iconStyle","paddingLeft","FooterChip","Chip","opacity","toUtc","date","Date","UTC","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","Sensor","buttonevent","diffToNow","model","lastupdated","diff","now","roundedMinutes","floor","hours","CardHeader","avatar","split","action","battery","subheader","justifyContent","alignContent","lightlevel","dark","temperature","toFixed","presence","switch","SENSOR_TYPES","groupSwitchesById","switches","dict","forEach","sensor","uniqueid","sensorGroupId","substring","groupSensorsById","sensors","create","useAccessories","Sensors","Paper","placeholder","si","Switches","TabPanel","children","index","role","tabs","route","wrapper","withRouter","getPathIndex","found","findIndex","t","location","pathname","AppBar","position","Tabs","event","history","push","scrollButtons","tab","ti","Tab","containerStyle","onChangeIndex","disableLazyLoading","animateTransitions","App","hueState","localStorage","getItem","setBaseUrl","setUsername","setAppname","useDefaultHueState","hueContext","token","createBaseUrl","setItem","clear","prefersDarkMode","useMediaQuery","createTheme","QueryClient","client","ThemeProvider","CssBaseline","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMA4DaA,EAAaC,IAAMC,cAA2B,CACzDC,MAAO,CACLC,SAAS,EACTC,UAAU,EACVC,SAAS,GAEXC,WAAY,WAAO,EACnBC,WAAY,WAAO,IAGRC,EAAgB,WAAH,OAASR,IAAMS,WAAWV,EAAY,E,kIC7DjDW,MATf,WAGI,IAAIC,EAA6B,MAAhBC,KAAKC,SAAoB,EACtCC,EAA8B,MAAhBF,KAAKC,SAAoB,EAG3C,OAFAF,GAAa,MAAQA,EAAUI,SAAS,KAAKC,OAAO,IAEjC,IADnBF,GAAc,MAAQA,EAAWC,SAAS,KAAKC,OAAO,GAE1D,ECRaC,EACJ,EADIA,EAEF,EAFEA,EAGH,EAHGA,EAIF,E,4BCyBX,SAASC,EAAsBC,GAC7B,IAAQC,EAA4BD,EAA5BC,QAASC,EAAmBF,EAAnBE,KAASC,EAAK,YAAKH,EAAK,GACzC,EAAsBnB,IAAMuB,SAAiBb,KAAc,mBAApDc,EAAG,KAAEC,EAAM,KAElBzB,IAAM0B,WAAU,WACTL,GAAMI,EAAOf,EACpB,GAAG,CAACW,IAGJrB,IAAM0B,WAAU,WACVP,EAAMQ,OAASV,GAAiBW,GAAO1B,EAAMC,SAC/C0B,MAAM,kCACHC,MAAK,SAACC,GAAC,OAAKA,EAAEC,MAAM,IACpBF,MAAK,SAACG,GACDA,GAAWA,EAAQC,OAAS,GAC9BC,EAAMF,EAAQ,GAAGG,kBAErB,GAEN,GAAG,CAACjB,EAAMQ,OAEV,MAA8BnB,IAAtBF,EAAU,EAAVA,WAAYJ,EAAK,EAALA,MAEpB,EAA8BF,IAAMuB,UAAkB,GAAM,mBAArDc,EAAO,KAAEC,EAAU,KAC1B,EAAoBtC,IAAMuB,SAAiB,IAAG,mBAAvCK,EAAE,KAAEO,EAAK,KAEVI,EAAWvC,IAAMwC,aAAY,WACjC,ODjDyBb,ECiDLR,EAAMQ,QDhDfV,EACJ,QAELU,IAASV,EACJ,eAELU,IAASV,EACJ,aAELU,IAASV,EACJ,SAEF,KAbmB,IAACU,CCkD3B,GAAG,CAACR,IAEEsB,EAAWzC,IAAMwC,aAAY,WAC7BrB,EAAMQ,OAASV,GAAiBoB,GAAWT,GAC7CC,MAAM,UAAD,OAAWD,EAAE,QAAQ,CACxBc,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEC,WAAY,aAAetB,MAEjDM,MAAK,SAACC,GAAC,OAAKA,EAAEC,MAAM,IACpBF,MAAK,SAACC,GACY,IAAbA,EAAEG,QAAgBH,EAAE,GAAGgB,OAA6B,MAApBhB,EAAE,GAAGgB,MAAMC,KAC7CC,QAAQC,IAAI,sCACHnB,EAAEG,OAAS,GAAKH,EAAE,GAAGoB,SAAWpB,EAAE,GAAGoB,QAAQ/C,UACtDE,EAAWsB,EAAIG,EAAE,GAAGoB,QAAQ/C,SAAU,aAAeoB,GACrDJ,KAEA6B,QAAQF,MAAM,qBAAsBhB,EAExC,IAEAZ,EAAMQ,OAASV,GACjBE,EAAMiC,OAEJjC,EAAMQ,OAASV,GACjBE,EAAMiC,OAEJjC,EAAMQ,OAASV,GACjBE,EAAMiC,MAEV,GAAG,CAACjC,EAAOK,EAAKlB,EAAY+B,EAAST,EAAIR,IAEzC,GAAIlB,EAAMC,QACR,OAAO,KAGT,IAAMkD,EAAU,WACd,OAAIlC,EAAMQ,OAASV,EAEf,cAACqC,EAAA,EAAU,UAAC,mDAGZnC,EAAMQ,OAASV,EAEf,qCACE,cAACqC,EAAA,EAAU,UAAC,+EAIZ,cAACC,EAAA,EAAgB,CACfC,QACE,cAACC,EAAA,EAAQ,CACPC,UAAQ,EACRC,QAAStB,EACTuB,SAAU,SAACC,EAAGC,GAAC,OAAKxB,EAAWwB,EAAE,EACjCC,KAAK,YAGTC,MAAM,0BAKV7C,EAAMQ,OAASV,EAEf,qCACE,cAACgD,EAAA,EAAS,CACRD,MAAM,GACNE,MAAOtC,EACPuC,QAAQ,WACRP,SAAU,SAACC,GAAC,OAAK1B,EAAM0B,EAAEO,OAAOF,MAAM,IAExC,cAACG,EAAA,EAAc,UAAC,6HAOlBlD,EAAMQ,OAASV,EAEf,qCACE,cAACqC,EAAA,EAAU,UAAC,2FAIZ,eAACA,EAAA,EAAU,WAAC,+CACkC,8BAAG,cAAY9B,EAAI,OAAK,8BAMrE,IACT,EAEA,OACE,eAAC8C,EAAA,EAAM,yBACLC,sBAAoB,EACpBC,SAAS,KACT,kBAAgB,4BAChBnD,KAAMA,GACFC,GAAK,cAET,cAACmD,EAAA,EAAW,CAACC,GAAG,4BAA2B,SAAEnC,MAC7C,cAACoC,EAAA,EAAa,CAACC,UAAQ,WACrB,cAACvB,EAAO,MAEV,cAACwB,EAAA,EAAa,UACZ,cAACC,EAAA,EAAM,CACLC,UAAW1C,GAAWlB,EAAMQ,OAASV,EACrC+D,QAASvC,EACTwC,MAAM,UAAS,SAEd9D,EAAMQ,OAASV,EAAgB,SAAW,kBAKrD,CAEA,IAAMiE,EAAYC,aAAW,SAACC,GAAY,OACxCC,YAAa,CACXC,KAAM,CACJC,MAAO,OACPf,SAAU,IACVgB,gBAAiBJ,EAAMK,QAAQC,WAAWC,OAE5CA,MAAO,CACLJ,MAAO,MACPK,UAAW,MAEb,IAGW,SAASC,IACtB,IAAMC,EAAUZ,IAChB,EAAwBlF,IAAMuB,UAAS,GAAK,mBAArCF,EAAI,KAAE0E,EAAO,KAET5F,EACPK,IADFN,MAASC,QAGXH,IAAM0B,WAAU,WACTvB,GAAYkB,IACf2E,EAAQ/E,GACR8E,GAAQ,GAEZ,GAAG,CAAC5F,EAASkB,IAEb,IAIA,EAAwBrB,IAAMuB,SAASN,GAAY,mBAA5CU,EAAI,KAAEqE,EAAO,KAEpB,OACE,cAAC9E,EAAqB,CACpB4E,QAAS,CACPH,MAAOG,EAAQH,OAEjBjB,GAAG,gBACHuB,aAAW,EACXtE,KAAMA,EACNyB,KAAM,kBAAM4C,EAAQrE,EAAO,EAAE,EAC7BN,KAAMA,EACND,QAhBgB,SAAC8E,GACnBH,GAAQ,EACV,GAiBF,C,iFCpMeI,EAvBG,WAChB,IACWhG,EACPK,IADFN,MAASC,QAELiG,EAAcC,mBAAQ,iBAAO,CAAC,CAAC,GAAa,IAC5CC,EAAQC,mBAAQ,UAAiBpG,EAAO,WAAW,CACvDqG,QAAQ,WAAD,sCAAE,8GACgB3E,MAAM,GAAD,OAAI1B,EAAO,YAAW,KAAD,EAAnC,IAARsG,EAAQ,QACAC,GAAG,CAAD,qBACR,IAAIC,MAAM,+BAA+B,KAAD,2BAEzCF,EAASzE,QAAM,2CACvB,kDANO,GAORoE,gBAGF,OAAOC,mBACL,iBAAO,CACLO,OAAQN,EAAMO,MAAQT,EACvB,GACD,CAACA,EAAaE,GAElB,EChBMQ,EAAgB3B,YAAW,CAC/BG,KAAM,CACJyB,SAAU,KAEZC,MAAO,CACLC,SAAU,IAEZC,IAAK,CACHC,aAAc,IAEhBnD,MAAO,CACLoD,MAAO,OACP7B,MAAO,OAgEI8B,EA5DA,WACb,MAGI7G,IAFOH,EAAO,EAAhBH,MAASG,QACTE,EAAU,EAAVA,WAEMqG,EAAWT,IAAXS,OACFU,EAAcR,IACpB,OACE,mCACE,eAACS,EAAA,EAAI,CAACC,UAAWF,EAAYhC,KAAMnB,QAAQ,WAAU,UACnD,eAACsD,EAAA,EAAW,WACV,cAACnE,EAAA,EAAU,CACTkE,UAAWF,EAAYN,MACvB/B,MAAM,gBACNyC,cAAY,WACb,8BAGD,cAACpE,EAAA,EAAU,CAACa,QAAQ,KAAKwD,UAAU,KAAI,SACpCf,EAAO7C,OAEV,eAACT,EAAA,EAAU,CAACkE,UAAWF,EAAYJ,IAAKjC,MAAM,gBAAe,UAAC,UACpD2B,EAAOgB,WAEjB,eAACtE,EAAA,EAAU,CAACa,QAAQ,QAAQwD,UAAU,MAAK,UACzC,sBAAMH,UAAWF,EAAYtD,MAAM,SAAC,gBACnC4C,EAAOiB,IACR,uBACA,sBAAML,UAAWF,EAAYtD,MAAM,SAAC,eACnC4C,EAAOkB,UACR,uBACA,sBAAMN,UAAWF,EAAYtD,MAAM,SAAC,mBACnC4C,EAAOmB,cACR,uBACA,sBAAMP,UAAWF,EAAYtD,MAAM,SAAC,aACnC3D,GAAW,GACZ,6BAGJ,cAAC2H,EAAA,EAAW,CAACC,MAAO,CAAEC,WAAY,SAAU,SAC1C,cAACpD,EAAA,EAAM,CACLmD,MAAO,CAAEb,MAAO,SAChBe,KAAK,QACLC,QAAS,cAACC,EAAA,EAAI,CAACb,UAAU,gBACzBrD,QAAQ,YACRc,MAAM,YACND,QAAS,WACHsD,OAAOC,QAAQ,4CACjBhI,GAEJ,EAAE,SACH,qBAOX,E,SCdeiI,EAjEG,WAChB,IACWrI,EACPK,IADFN,MAASC,QAELsI,EAAcC,2BACdtC,EAAcC,mBAAQ,iBAAO,CAAC,CAAC,GAAwB,IACvDC,EAAQC,mBAAQ,UAA4BpG,EAAO,WAAW,CAClEwI,UAAW,GACXnC,QAAQ,WAAD,sCAAE,8GACgB3E,MAAM,GAAD,OAAI1B,EAAO,YAAW,KAAD,EAAnC,IAARsG,EAAQ,QACAC,GAAG,CAAD,qBACR,IAAIC,MAAM,+BAA+B,KAAD,2BAEzCF,EAASzE,QAAM,2CACvB,kDANO,GAORoE,gBAGIwC,EAAgBpG,uBACpB,kBAAMiG,EAAYI,eAAe,CAAEC,SAAS,GAAD,OAAK3I,EAAO,YAAY,GACnE,CAACA,EAASsI,IAGNM,EAAUvG,uBACd,SAACwG,EAAKrG,GAAI,OACRd,MAAMmH,EAAK,CACTtG,OAAQ,MACRC,KAAMC,KAAKC,UAAUF,IACrB,GACJ,IAGIsG,EAAgBzG,sBAAW,iDAC/B,WAAO0G,EAAaC,GAAc,2FAC1BJ,EAAQ,GAAD,OAAI5I,EAAO,mBAAW+I,EAAG,UAAU,CAAEE,IAAKD,IAAU,KAAD,EAChEP,IAAgB,2CACjB,qDAJ8B,GAK/B,CAACzI,EAASyI,EAAeG,IAGrBM,EAAS7G,sBAAW,iDACxB,WAAO8G,GAAY,2FACXP,EAAQ,GAAD,OAAI5I,EAAO,mBAAWmJ,EAAM5E,GAAE,UAAU,CACnD6E,IAAKD,EAAMpJ,MAAMqJ,KAChB,KAAD,EACFX,IAAgB,2CACjB,mDANuB,GAOxB,CAACzI,EAASyI,EAAeG,IAGrBS,EAAWhH,sBAAW,gCAAC,wGACrBuG,EAAQ,GAAD,OAAI5I,EAAO,oBAAoB,CAAEoJ,IAAI,IAAS,KAAD,EAC1DX,IAAgB,2CACf,CAACzI,EAASyI,EAAeG,IAE5B,OAAO1C,mBACL,iBAAO,CACLoD,OAAQnD,EAAMO,MAAQT,EACtB6C,gBACAI,SACAG,WACD,GACD,CAAClD,EAAOF,EAAa6C,EAAeI,EAAQG,GAEhD,EC9CeE,EArBA,WACb,IAAQF,EAAahB,IAAbgB,SACR,OACE,qBAAKvB,MAAO,CAAE1C,MAAO,OAAQoE,UAAW,UAAW,SACjD,cAACC,EAAA,EAAU,CACT3E,MAAM,YACNgD,MAAO,CACL4B,QAAS,OACTC,OAAQ,OACRvE,MAAO,GACPwE,OAAQ,GACR9C,SAAU,OAEZjC,QAAS,kBAAMwE,GAAU,EAAC,SAE1B,cAACnB,EAAA,EAAI,CAACb,UAAW,uBAIzB,E,2ECFewC,GAjBGC,aAAW,CAC3B3E,KAAM,CACJwE,OAAQ,gCACRI,UAAW,OACX,qBAAsB,CACpBC,aAAc,GAEhB,WAAY,CACVC,QAAS,QAEX,aAAc,CACZC,OAAQ,SAGZC,SAAU,CAAC,GAdKL,CAefM,M,8BCGYC,GAlBUP,aAAW,CAClC3E,KAAM,CACJE,gBAAiB,qBACjB2E,aAAc,gCACdhD,cAAe,EACfsD,UAAW,GACX,aAAc,CACZA,UAAW,KAGfC,QAAS,CACP,aAAc,CACZL,OAAQ,WAGZC,SAAU,CAAC,GAfYL,CAgBtBU,MCnBUC,GAAU,SAACC,GAEtB,OAAQA,GACN,IAAK,cACH,MAAO,QACT,IAAK,WACH,MAAO,kBACT,IAAK,UACH,MAAO,SACT,IAAK,UACH,MAAO,UACT,IAAK,SACH,MAAO,cACT,IAAK,UACH,MAAO,YACT,IAAK,aACH,MAAO,iBACT,IAAK,UACH,MAAO,kBAEX5H,QAAQF,MAAM,qBAAuB8H,EACvC,EC4BeC,GA3CG,WAChB,IAAMrC,EAAcC,2BAETvI,EACPK,IADFN,MAASC,QAELiG,EAAcC,mBAAQ,iBAAO,CAAC,CAAC,GAAqB,IACpDC,EAAQC,mBAAQ,UAAyBpG,EAAO,WAAW,CAC/DwI,UAAW,GACXnC,QAAQ,WAAD,sCAAE,8GACgB3E,MAAM,GAAD,OAAI1B,EAAO,YAAW,KAAD,EAAnC,IAARsG,EAAQ,QACAC,GAAG,CAAD,qBACR,IAAIC,MAAM,+BAA+B,KAAD,2BAEzCF,EAASzE,QAAM,2CACvB,kDANO,GAORoE,gBAGI2E,EAAgBvI,uBACpB,kBAAMiG,EAAYI,eAAe,CAAEC,SAAS,GAAD,OAAK3I,EAAO,YAAY,GACnE,CAACA,EAASsI,IAGNY,EAAS7G,sBAAW,iDACxB,WAAOwI,GAAU,iFAC2B,OAApCC,EAAU,CAAE1B,IAAKyB,EAAK9K,MAAMgL,QAAS,EAAD,OACpCrJ,MAAM,GAAD,OAAI1B,EAAO,mBAAW6K,EAAKtG,GAAE,WAAW,CACjDhC,OAAQ,MACRC,KAAMC,KAAKC,UAAUoI,KACpB,KAAD,EACFF,IAAgB,2CACjB,mDARuB,GASxB,CAAC5K,EAAS4K,IAGZ,OAAO1E,mBACL,iBAAO,CACL8E,OAAQ7E,EAAMO,MAAQT,EACtBiD,SACD,GACD,CAACjD,EAAaE,EAAO+C,GAEzB,EChBe+B,GA1BF,SAAH,GAAuC,IAAjCC,EAAI,EAAJA,KACNhC,EAAWyB,KAAXzB,OACR,OACE,cAAC,GAAgB,CAAC,gBAAc,kBAAkB3E,GAAG,iBAAgB,SACnE,eAAC4G,GAAA,EAAI,CAACrD,MAAO,CAAE1C,MAAO,QAAUgG,WAAS,YACvC,eAACC,GAAA,EAAG,CAACpB,QAAQ,OAAOqB,SAAU,EAAGxD,MAAO,CAAEoC,OAAQ,QAAS,UACzD,cAAChC,EAAA,EAAI,CAACb,UAAS,aAAQoD,GAAQS,EAAKK,QAAUzD,MAAO,CAAE1C,MAAO,MAC9D,cAACjC,EAAA,EAAU,UAAE+H,EAAKtH,UAEpB,cAACyH,GAAA,EAAG,UACF,cAACG,GAAA,EAAM,CACLhI,QAAS0H,EAAKnL,MAAMgL,OACpBlG,QAAS,SAACnB,GAAC,OAAKA,EAAE+H,iBAAiB,EACnChI,SAAU,SAACC,GACTA,EAAE+H,kBACFvC,EAAOgC,EACT,EACApG,MAAM,UACN4G,WAAY,CAAE,aAAc,4BAMxC,E,UCVeC,GATK,SAAH,GAAkD,IAT5CC,EASAC,EAAW,EAAXA,YACrB,OACE,cAACC,GAAA,EAAY,CACXhE,MAAO,CAAEhB,SAAU,QAASoD,OAAQ,QACpC7C,WAbiBuE,EAaQC,EAZhB,gBAATD,EAA+B,aACtB,wBAATA,EAAuC,aAC9B,qBAATA,EAAoC,aAC3B,mBAATA,GACS,mBAATA,EADkC,mBAE/B,qBAUT,ECyBeG,GArCG,WAChB,IAAMzD,EAAcC,2BAETvI,EACPK,IADFN,MAASC,QAELiG,EAAcC,mBAAQ,iBAAO,CAAC,CAAC,GAAoB,IACnDC,EAAQC,mBAAQ,UAAwBpG,EAAO,WAAW,CAC9DqG,QAAQ,WAAD,sCAAE,8GACgB3E,MAAM,GAAD,OAAI1B,EAAO,YAAW,KAAD,EAAnC,IAARsG,EAAQ,QACAC,GAAG,CAAD,qBACR,IAAIC,MAAM,+BAA+B,KAAD,2BAEzCF,EAASzE,QAAM,2CACvB,kDANO,GAORoE,gBAGI+F,EAAW3J,sBAAW,iDAC1B,WAAO4J,GAAY,iFACkB,OAA7BnB,EAAU,CAAEmB,MAAOA,EAAM1H,IAAK,EAAD,OAC7B7C,MAAM,GAAD,OAAI1B,EAAO,mBAAWiM,EAAMC,MAAK,WAAW,CACrD3J,OAAQ,MACRC,KAAMC,KAAKC,UAAUoI,KACpB,KAAD,EACFxC,EAAYI,iBAAiB,2CAC9B,mDARyB,GAS1B,CAAC1I,EAASsI,IAGZ,OAAOpC,mBACL,iBAAO,CACLiG,OAAQhG,EAAMO,MAAQT,EACtB+F,WACD,GACD,CAAC/F,EAAaE,EAAO6F,GAEzB,ECpBaI,GAAW,WACtB,IAAQpB,EAAWL,KAAXK,OACA1B,EAAWjB,IAAXiB,OACA6C,EAAWJ,KAAXI,OACR,OAAOjG,mBACL,kBACEmG,OAAOC,KAAKtB,GACTuB,KAAI,SAACC,GAAC,OAAKC,SAASD,EAAE,IACtBD,KAAI,SAAChI,GAAU,kCAEXyG,EAAOzG,IAAG,IACbA,KAEA+E,OAAQ0B,EAAOzG,GAAI+E,OAAOiD,KAAI,SAACG,GAAC,kCAC3BpD,EAAOmD,SAASC,KAAG,IACtBnI,GAAIkI,SAASC,IAAE,IAGjBP,OAAQE,OAAOC,KAAKH,GACjBQ,QACC,SAACC,GAAC,OACCT,EAAOS,GAAGC,SACQ,eAAnBV,EAAOS,GAAG/J,MACV4J,SAASN,EAAOS,GAAGV,SAAW3H,CAAE,IAEnCgI,KAAI,SAACK,GAAC,kCAAWT,EAAOS,IAAE,IAAErI,GAAIqI,GAAC,KAAI,GACvC,GACP,CAAC5B,EAAQ1B,EAAQ6C,GAErB,E,UC/CaW,GAAmB,SAAH,GAAqC,IAA/B3D,EAAK,EAALA,MACzBL,EAAkBT,IAAlBS,cACR,OAAOK,EAAMpJ,MAAMkJ,IACjB,cAAC8D,GAAA,EAAM,CACLnI,UAAWuE,EAAMpJ,MAAMqJ,GACvB4D,IAAK,EACLC,IAAK,IACLlJ,MAAOoF,EAAMpJ,MAAMkJ,IACnBiE,kBAAmB,SAACxJ,EAAGyJ,GAAG,OAAKrE,EAAcK,EAAM5E,GAAI4I,EAAW,EAClE,kBAAgB,sBAEhB,IACN,ECZaC,GAAc,SAAH,GAAqC,IAA/BjE,EAAK,EAALA,MACpBD,EAAWb,IAAXa,OACR,OACE,cAACsC,GAAA,EAAM,CACLxD,KAAK,QACLxE,UAAW2F,EAAMpJ,MAAMqJ,GACvB3F,SAAU,kBAAMyF,EAAOC,EAAM,GAGnC,ECkEekE,GA/DA,WACb,MAAgCxN,IAAMuB,UAAyB,GAAM,mBAA9D+I,EAAQ,KAAEmD,EAAW,KACtBC,EAAQnB,KACd,OACE,mCACGmB,EAAMhB,KAAI,SAACrB,GAAI,OACd,eAAC,GAAS,CAERsC,QAAM,EACNrD,SAAUA,IAAae,EAAK3G,GAC5Bd,SAAU,SAACC,EAAG+J,GAAW,OACvBH,IAAYG,GAAcvC,EAAK3G,GAAW,EAC3C,UAED,cAAC,GAAI,CAAC2G,KAAMA,IACZ,cAACwC,EAAA,EAAgB,UACf,cAACC,EAAA,EAAI,CACH,aAAW,YACX7I,MAAM,UACNgD,MAAO,CACL1C,MAAO,OACP0B,SAAU,UACV,SAEDoE,EAAK5B,OAAOiD,KAAI,SAACpD,GAAK,OACrB,eAAC,IAAMyE,SAAQ,WACb,eAACC,EAAA,EAAQ,CACP/F,MAAO,CACLgG,cAAe,SACf5D,OAAQ,EACR6D,QAAS,GACT,UAEF,eAAC1C,GAAA,EAAG,CAACjG,MAAM,OAAO6E,QAAQ,OAAO6D,cAAc,MAAK,UAClD,eAACzC,GAAA,EAAG,CAACpB,QAAQ,OAAOqB,SAAU,EAAE,UAC9B,cAAC,GAAW,CAACO,YAAa1C,EAAM0C,cAChC,cAACmC,GAAA,EAAY,CACXC,QAAS9E,EAAMvF,KACfsK,UAAW/E,EAAM0C,iBAGrB,cAACR,GAAA,EAAG,UACF,cAAC,GAAW,CAAClC,MAAOA,SAIxB,cAAC,GAAgB,CAACA,MAAOA,QAEzBA,EAAMpJ,MAAMkJ,KACZ,cAACkF,GAAA,EAAO,CAENrG,MAAO,CAAEd,aAAc,GAAIoH,UAAW,KADjCjF,EAAM5E,GAAK,OAzBD4E,EAAM5E,GA6BV,UA/ClB2G,EAAK3G,GAmDA,KAIpB,ECDe8J,GA7DA,WACb,MAAgCxO,IAAMuB,UAAyB,GAAM,mBAA9D+I,EAAQ,KAAEmD,EAAW,KACpBtB,EAAaD,KAAbC,SACFuB,EAAQnB,KAEd,OACE,mCACGmB,EAAMhB,KAAI,SAACrB,GAAI,OACd,eAAC,GAAS,CAERsC,QAAM,EACNrD,SAAUA,IAAae,EAAK3G,GAC5Bd,SAAU,SAACC,EAAG+J,GAAW,OACvBH,IAAYG,GAAcvC,EAAK3G,GAAW,EAC3C,UAED,cAAC,GAAI,CAAC2G,KAAMA,IACZ,cAACwC,EAAA,EAAgB,UACf,cAACC,EAAA,EAAI,CACH,aAAW,YACX7I,MAAM,UACNgD,MAAO,CACL1C,MAAO,OACP0B,SAAU,UACV,SAEDoE,EAAKiB,OAAOI,KAAI,SAACN,GAAK,OACrB,qCACE,cAAC4B,EAAA,EAAQ,CAEP/F,MAAO,CACLgG,cAAe,SACf5D,OAAQ,EACR6D,QAAS,GACT,SAEF,eAAC1C,GAAA,EAAG,CAACjG,MAAM,OAAO6E,QAAQ,OAAO6D,cAAc,MAAK,UAClD,cAACzC,GAAA,EAAG,CAACpB,QAAQ,OAAOqB,SAAU,EAAE,SAC9B,cAAC0C,GAAA,EAAY,CAACC,QAAShC,EAAMrI,SAE/B,cAACyH,GAAA,EAAG,UACF,cAAC1G,EAAA,EAAM,CACLqD,KAAK,QACLhE,QAAQ,WACRa,QAAS,kBAAMmH,EAASC,EAAM,EAAC,SAChC,mBAhBAA,EAAM1H,IAsBb,cAAC4J,GAAA,EAAO,CAACrG,MAAO,CAAEd,aAAc,GAAIoH,UAAW,QAC9C,UA3CJlD,EAAKtH,KA+CA,KAIpB,E,8BC5De0K,I,OAZC,SAACtN,GACf,OACE,qBAAK8G,MAAO,CAAEoC,OAAQ,QAAS,SAC7B,qBAAK7C,UAAU,UAAS,SACtB,qBACEA,UAAU,gBACVS,MAAO,CAAE8B,OAAQ5I,EAAMuN,MAAQ,UAKzC,GCDMC,GAAW,SAACtD,GAChB,OAAQA,GACN,IAAK,SACL,IAAK,cACH,MAAO,QACT,IAAK,WACL,IAAK,OACH,MAAO,kBACT,IAAK,MACL,IAAK,UACH,MAAO,SACT,IAAK,UACH,MAAO,UACT,IAAK,SACL,IAAK,aACH,MAAO,cACT,IAAK,UACH,MAAO,YACT,IAAK,WACL,IAAK,WACH,MAAO,iBACT,IAAK,SACL,IAAK,MACH,MAAO,kBAEXpI,QAAQF,MAAM,oBAAsBsI,EACtC,EAEMuD,GAAY,CAChBrJ,MAAO,OACPwE,OAAQ,OACRM,OAAQ,OACRpD,SAAU,QACV4H,YAAa,QAGTC,GAAa,SAAC3N,GAKlB,OACE,cAAC4N,GAAA,EAAI,CACH9G,MAAO,CAAEzC,gBAAgB,oBAAD,OAAsBrE,EAAM6N,QAAO,MAC3D7K,QAAQ,WACRgE,KAAK,QACL4D,KAAM,cAAC1D,EAAA,EAAI,CAACJ,MAAO2G,GAAWpH,UAAS,gBAAWrG,EAAM4K,QACxD/H,MAAO7C,EAAM6C,OAGnB,EAEMiL,GAAQ,SAACC,GAUb,OATcC,KAAKC,IACjBF,EAAKG,iBACLH,EAAKI,cACLJ,EAAKK,aACLL,EAAKM,cACLN,EAAKO,gBACLP,EAAKQ,gBAIT,EA0HeC,GAxHA,SAACxO,GAST,IAAD,kDA4BsByO,EA1BpBC,EAAY7P,IAAMwC,aAAY,WAAO,IAAD,MACxC,IAAKrB,EAAM2O,MAAMA,MAAO,OAAO,KAC/B,IAAMhO,EAAO,IAAIqN,KAAgB,QAAZ,EAAChO,EAAM2O,aAAK,OAAO,QAAP,EAAX,EAAaA,aAAK,OAAO,QAAP,EAAlB,EAAoB5P,aAAK,WAAd,EAAX,EAA2B6P,aAG3CC,EADUf,GAAM,IAAIE,KAAKA,KAAKc,QACbhB,GAAMnN,GAEvBoO,EAAiBtP,KAAKuP,MAAMH,EAAO,IAAO,IAAM,GAEtD,GAAIE,GAAkB,GAAI,CACxB,IAAME,EAAQxP,KAAKuP,MAAMD,EAAiB,IAC1C,OAAIE,EAAQ,GACGxP,KAAKuP,MAAMC,EAAQ,IAClB,YAETA,EAAQ,YACjB,CACA,OAAuB,IAAnBF,EACK,MAEc,IAAnBA,EACK,eAEFA,EAAiB,cAC1B,GAAG,CAAC/O,IAWJ,OACE,eAACoG,EAAA,EAAI,CAACpD,QAAQ,WAAU,UACtB,cAACkM,GAAA,EAAU,CACTC,OACE,cAACjI,EAAA,EAAI,CACHJ,MAAO,CAAEoC,OAAQ,OAAQ9E,MAAO,QAChCiC,UAAW,MAAQmH,GAAoB,QAAZ,EAACxN,EAAM2O,aAAK,OAAO,QAAP,EAAX,EAAaA,aAAK,WAAP,EAAX,EAAoB/L,KAAKwM,MAAM,KAAK,MAGpEvJ,MAAO7F,EAAM2O,MAAMA,MAAM/L,KACzByM,OACa,QAAX,EAAArP,EAAM2O,aAAK,OAAO,QAAP,EAAX,EAAaA,aAAK,OAAQ,QAAR,EAAlB,EAAoBlJ,cAAM,OAA1B,EAA4B6J,QAC1B,cAAC,GAAO,CAAC/B,MAAOvN,EAAM2O,MAAMA,MAAMlJ,OAAO6J,UACvC,KAENC,UAAWb,MAGb,cAAC7H,EAAA,EAAW,UACV,eAACwD,GAAA,EAAG,CACFjG,MAAM,OACN6E,QAAQ,OACRuG,eAAe,gBACfC,aAAa,SAAQ,WAEH,QAAjB,EAAAzP,EAAM2O,MAAMxG,aAAK,OAAO,QAAP,EAAjB,EAAmBpJ,aAAK,WAAP,EAAjB,EAA0B2Q,aACzB,cAACrF,GAAA,EAAG,UACF,cAAC,GAAU,CACTO,KAAuB,QAAjB,EAAA5K,EAAM2O,MAAMxG,aAAK,OAAjB,EAAmBpJ,MAAM4Q,KAAO,OAAS,MAC/C9M,MAAwB,QAAnB,EAAE7C,EAAM2O,MAAMxG,aAAK,OAAO,QAAP,EAAjB,EAAmBpJ,aAAK,WAAP,EAAjB,EAA0B2Q,WACjC7B,SAA0B,QAAjB,EAAA7N,EAAM2O,MAAMxG,aAAK,OAAO,QAAP,EAAjB,EAAmBpJ,aAAK,WAAP,EAAjB,EAA0B2Q,YAAa,UAI9B,QAAvB,EAAA1P,EAAM2O,MAAMiB,mBAAW,OAAO,QAAP,EAAvB,EAAyB7Q,aAAK,WAAP,EAAvB,EAAgC6Q,cAC/B,cAACvF,GAAA,EAAG,UACF,cAAC,GAAU,CACTO,KAAK,cACL/H,MAAK,WACH7C,EAAM2O,MAAMiB,YAAY7Q,MAAM6Q,YAAc,KAC5CC,QAAQ,GAAE,cAIG,QAApB,EAAA7P,EAAM2O,MAAMmB,gBAAQ,aAApB,EAAsB/Q,QACrB,eAACsL,GAAA,EAAG,YACmB,QAApB,EAAArK,EAAM2O,MAAMmB,gBAAQ,OAAO,QAAP,EAApB,EAAsB/Q,aAAK,WAAP,EAApB,EAA6B+Q,WAC5B,cAAC,GAAU,CAAClF,KAAK,MAAM/H,MAAM,eAET,QAArB,EAAC7C,EAAM2O,MAAMmB,gBAAQ,OAAO,QAAP,EAApB,EAAsB/Q,aAAK,OAA3B,EAA6B+Q,WAC7B,cAAC,GAAU,CAAClF,KAAK,YAAY/H,MAAM,oBAKtB,QAAlB,EAAA7C,EAAM2O,MAAMoB,cAAM,OAAO,QAAP,EAAlB,EAAoBhR,aAAK,WAAP,EAAlB,EAA2B0P,cAC1B,cAACpE,GAAA,EAAG,WACiB,QAAlB,EAAArK,EAAM2O,MAAMoB,cAAM,OAAO,QAAP,EAAlB,EAAoBhR,aAAK,WAAP,EAAlB,EAA2B0P,cAC1B,cAAC,GAAU,CACT7D,KAAK,kBACL/H,MACE,yBAtEQ4L,EAuE2B,QAAnB,EAACzO,EAAM2O,MAAMoB,cAAM,OAAO,QAAP,EAAlB,EAAoBhR,aAAK,WAAP,EAAlB,EAA2B0P,YAtExC,OAAhBA,EAA6B,KACb,OAAhBA,EAA6B,QACb,OAAhBA,EAA6B,QACb,OAAhBA,EAA6B,MAE1B,eA2EX,ECpLauB,GAEC,gBAFDA,GAGE,iBAHFA,GAID,cAJCA,GAMA,YANAA,GAOG,YClBVC,GAAoB,SAACC,GACzB,IAAMC,EAAgC,CAAC,EAuBvC,OAtBA9E,OAAOC,KAAK4E,GACT3E,KAAI,SAACxD,GAAG,OAAKmI,EAASzE,SAAS1D,GAAK,IACpCqI,SAAQ,SAACC,GACR,GAAIA,GAAUA,EAAOC,SAAU,CAC7B,IAAMC,EAAgBF,EAAOC,SAASE,UAAU,EAAG,IAQjDH,EAAOxO,OAASmO,IAChBK,EAAOxO,OAASmO,KANXG,EAAKI,KACRJ,EAAKI,GAAiB,CAAC,GAQzBJ,EAAKI,GAAe5B,MAAQ0B,EAC5BF,EAAKI,GAAeR,OAASM,EAEjC,CACF,IAEKF,CACT,EAGMM,GAAmB,SAACC,GACxB,IAAMP,EAAgC,CAAC,EAgCvC,OA/BA9E,OAAOC,KAAKoF,GACTnF,KAAI,SAACxD,GAAG,OAAK2I,EAAQjF,SAAS1D,GAAK,IACnCqI,SAAQ,SAACC,GACR,GAAIA,GAAUA,EAAOC,SAAU,CAC7B,IAAMC,EAAgBF,EAAOC,SAASE,UAAU,EAAG,IAE7CG,EAAS,WACRR,EAAKI,KACRJ,EAAKI,GAAiB,CAAC,EAE3B,EAKIF,EAAOxO,OAASmO,KAClBW,IACAR,EAAKI,GAAeX,YAAcS,GAEhCA,EAAOxO,OAASmO,KAClBW,IACAR,EAAKI,GAAepI,MAAQkI,GAE1BA,EAAOxO,OAASmO,KAClBW,IACAR,EAAKI,GAAe5B,MAAQ0B,EAC5BF,EAAKI,GAAe3N,KAAOyN,EAAOzN,KAClCuN,EAAKI,GAAeT,SAAWO,EAEnC,CACF,IACKF,CACT,EA0BeS,GAxBQ,WACrB,IACW5R,EACPK,IADFN,MAASC,QAELiG,EAAcC,mBAAQ,iBAAO,CAAC,CAAC,GAAuB,IACtDC,EAAQC,mBAAQ,UAA2BpG,EAAO,YAAY,CAClEqG,QAAQ,WAAD,sCAAE,8GACgB3E,MAAM,GAAD,OAAI1B,EAAO,aAAY,KAAD,EAApC,IAARsG,EAAQ,QACAC,GAAG,CAAD,qBACR,IAAIC,MAAM,+BAA+B,KAAD,2BAEzCF,EAASzE,QAAM,2CACvB,kDANO,GAORoE,gBAGF,OAAOC,mBACL,iBAAO,CACLwL,QAASD,GAAiBtL,EAAMO,MAAQT,GACxCiL,SAAUD,GAAkB9K,EAAMO,MAAQT,GAC3C,GACD,CAACA,EAAaE,GAElB,EC5Ee0L,GAbC,WACd,IAAQH,EAAYE,KAAZF,QACR,OACE,cAACI,GAAA,EAAK,CAACC,YAAY,UAAS,SACzB1F,OAAOC,KAAKoF,GACVnF,KAAI,SAACxD,GAAG,OAAK2I,EAAQ3I,EAAI,IACzBwD,KAAI,SAAC8E,EAAQW,GAAE,OACd,cAAC,GAAM,CAAUrC,MAAO0B,GAAXW,EAAqB,KAI5C,E,qBCEeC,GAbE,WACf,IAAQf,EAAaU,KAAbV,SACR,OACE,cAACY,GAAA,EAAK,CAACC,YAAY,UAAS,SACzB1F,OAAOC,KAAK4E,GACV3E,KAAI,SAACxD,GAAG,OAAKmI,EAASnI,EAAI,IAC1BwD,KAAI,SAAC8E,EAAQW,GAAE,OACd,cAAC,GAAM,CAAUrC,MAAO0B,GAAXW,EAAqB,KAI5C,E,kCCSeE,OAhBf,SAAkBlR,GAChB,IAAQmR,EAA8BnR,EAA9BmR,SAAUC,EAAoBpR,EAApBoR,MAAUjR,EAAK,YAAKH,EAAK,IAE3C,OACE,6CACE8G,MAAO,CAAE8B,OAAQ,QACjByI,KAAK,WACL9N,GAAE,0BAAqB6N,GACvB,uCAA+BA,IAC3BjR,GAAK,aAET,cAACkK,GAAA,EAAG,UAAE8G,MAGZ,E,UCPMG,GAAO,CACX,CAAE1G,KAAM,iBAAkB/H,MAAO,SAAU0O,MAAO,WAClD,CAAE3G,KAAM,eAAgB/H,MAAO,SAAU0O,MAAO,WAChD,CAAE3G,KAAM,YAAa/H,MAAO,WAAY0O,MAAO,aAC/C,CAAE3G,KAAM,sBAAuB/H,MAAO,UAAW0O,MAAO,YACxD,CAAE3G,KAAM,UAAW/H,MAAO,SAAU0O,MAAO,YAGvCxN,GAAYC,aAAW,SAACC,GAAY,MAAM,CAC9CuN,QAAS,CACP1E,cAAe,OAElB,IA4Ec2E,oBA1Ef,SAAgBzR,GACd,IAAM0R,EAAe7S,IAAMwC,aAAY,WACrC,IAAMsQ,EAAQL,GAAKM,WAAU,SAACC,GAAC,OAAKA,EAAEN,QAAUvR,EAAM8R,SAASC,QAAQ,IACvE,OAAOJ,EAAQ,EAAIA,EAAQ,CAC7B,GAAG,CAAC3R,IAYE2E,EAAUZ,KAEhB,OACE,sBACE+C,MAAO,CACL1C,MAAO,QACPf,SAAU,IACV6F,OAAQ,OACRN,OAAQ,SACR,UAEF,eAACoJ,EAAA,EAAM,CAACC,SAAS,SAASnO,MAAM,UAAS,UACvC,cAAC,EAAM,IACP,cAACoO,GAAA,EAAI,CACHzP,SAxBgB,SAAC0P,EAA8BpN,GACrD/E,EAAMoS,QAAQC,KAAKf,GAAKvM,GAAUwM,MAEpC,EAsBQe,cAAc,OACdtP,QAAQ,aACRqD,UAAW1B,EAAQ6M,QACnBzO,MAAO2O,IAAe,SAErBJ,GAAK/F,KAAI,SAACgH,EAAKC,GAAE,OAChB,cAACC,GAAA,EAAG,CAEF3L,MAAO,CAAEhB,SAAU,QAAS1B,MAAO,IACnCwG,KAAM,cAAC1D,EAAA,EAAI,CAACb,UAAW,MAAQkM,EAAI3H,OACnC/H,MAAO0P,EAAI1P,OAHN2P,EAIL,SAIR,eAAC,KAAc,CACb1L,MAAO,CAAE8B,OAAQ,QACjB8J,eAAgB,CAAE9J,OAAQ,QAC1BwI,MAAOM,IACPiB,cAvCiB,SAAC5N,GACtB/E,EAAMoS,QAAQC,KAAKf,GAAKvM,GAAUwM,MAEpC,EAqCMqB,oBAAkB,EAClBC,oBAAoB,EAAM,UAE1B,cAAC,GAAQ,CAACzB,MAAO,EAAE,SACjB,cAAC,GAAM,MAET,cAAC,GAAQ,CAACA,MAAO,EAAE,SACjB,cAAC,GAAM,MAET,cAAC,GAAQ,CAACA,MAAO,EAAE,SACjB,cAAC,GAAQ,MAEX,cAAC,GAAQ,CAACA,MAAO,EAAE,SACjB,cAAC,GAAO,MAEV,cAAC,GAAQ,CAACA,MAAO,EAAE,SACjB,cAAC,EAAM,WAKjB,I,UClDe0B,OApCf,WACE,IAAMC,E5BJ0B,WAChC,MAA8BlU,IAAMuB,SAClC4S,aAAaC,QAAQ,aAAc,GACpC,mBAFMjU,EAAO,KAAEkU,EAAU,KAG1B,EAAgCrU,IAAMuB,SACpC4S,aAAaC,QAAQ,cAAe,GACrC,mBAFMhU,EAAQ,KAAEkU,EAAW,KAG5B,EAA8BtU,IAAMuB,SAClC4S,aAAaC,QAAQ,aAAc,GACpC,mBAED,MAAO,CACLjU,UACAkU,aACAjU,WACAkU,cACAjU,QATY,KAUZkU,WAVwB,KAY5B,C4BfmBC,GACXC,EAAa,CACjBvU,MAAOgU,EACP5T,WAAY,SAACsB,EAAYxB,EAAkBC,GAAe,O5B0BpC,SACxBH,EACA0B,EACAxB,EACAC,GAEA,IAAMF,E6BnDqB,SAACyB,EAAY8S,GAAa,uBAC3C9S,EAAE,gBAAQ8S,EAAK,C7BkDTC,CAAc/S,EAAIxB,GAClCF,EAAMmU,YAAcnU,EAAMmU,WAAWlU,GACrCD,EAAMoU,aAAepU,EAAMoU,YAAYlU,GACvCF,EAAMqU,YAAcrU,EAAMqU,WAAWlU,GACrC8T,aAAaS,QAAQ,UAAWzU,GAChCgU,aAAaS,QAAQ,WAAYxU,GACjC+T,aAAaS,QAAQ,UAAWvU,EAClC,C4BtCMC,CAAW4T,EAAUtS,EAAIxB,EAAUC,EAAQ,EAC7CE,WAAY,kB5BkBWL,E4BlBMgU,E5BmB/BC,aAAaU,QACb3U,EAAMmU,YAAcnU,EAAMmU,WAAW,SACrCnU,EAAMoU,aAAepU,EAAMoU,YAAY,KAHf,IAACpU,C4BlBe,GAGlC4U,EAAkBC,aAAc,gCAChC3P,EAAQpF,IAAMqG,SAClB,kBACE2O,YAAY,CACVvP,QAAS,CACPzC,KAAM8R,EAAkB,OAAS,UAEnC,GACJ,CAACA,IAEGrM,EAAc,IAAIwM,cAExB,OACE,cAAC,sBAAmB,CAACC,OAAQzM,EAAY,SACvC,eAAC0M,EAAA,EAAa,CAAC/P,MAAOA,EAAM,UAC1B,cAACgQ,EAAA,EAAW,IACZ,cAACrV,EAAWsV,SAAQ,CAACnR,MAAOuQ,EAAW,SACrC,eAAC,IAAa,WACXA,EAAWvU,MAAMC,SAAW,cAAC,GAAM,IACpC,cAAC0F,EAAkB,aAM/B,E,iBE7CAyP,EAASC,OACP,cAAC,IAAMC,WAAU,UACf,cAAC,GAAG,MAENC,SAASC,eAAe,Q","file":"static/js/main.1cd8d1db.chunk.js","sourcesContent":["import React from \"react\";\nimport { createBaseUrl } from \"./clip/v1/createBaseUrl\";\n\nexport interface IHueState {\n  baseUrl: string | false;\n  username: string | false;\n  appname: string | false;\n  setBaseUrl?: (ip: string) => void;\n  setAppname?: (a: string) => void;\n  setUsername?: (u: string) => void;\n}\n\nexport const useDefaultHueState = () => {\n  const [baseUrl, setBaseUrl] = React.useState<string | false>(\n    localStorage.getItem(\"baseUrl\") || false\n  );\n  const [username, setUsername] = React.useState<string | false>(\n    localStorage.getItem(\"username\") || false\n  );\n  const [appname, setAppname] = React.useState<string | false>(\n    localStorage.getItem(\"appname\") || false\n  );\n\n  return {\n    baseUrl,\n    setBaseUrl,\n    username,\n    setUsername,\n    appname,\n    setAppname,\n  };\n};\n\nexport interface IHueContext {\n  state: IHueState;\n  disconnect: () => void;\n  initialize: (ip: string, username: string, appname: string) => void;\n}\n\nexport const disconnect = (state: IHueState) => {\n  localStorage.clear();\n  state.setBaseUrl && state.setBaseUrl(\"\");\n  state.setUsername && state.setUsername(\"\");\n};\n\nexport const initialize = (\n  state: IHueState,\n  ip: string,\n  username: string,\n  appname: string\n) => {\n  const baseUrl = createBaseUrl(ip, username);\n  state.setBaseUrl && state.setBaseUrl(baseUrl);\n  state.setUsername && state.setUsername(username);\n  state.setAppname && state.setAppname(appname);\n  localStorage.setItem(\"baseUrl\", baseUrl);\n  localStorage.setItem(\"username\", username);\n  localStorage.setItem(\"appname\", appname);\n};\n\nexport const HueContext = React.createContext<IHueContext>({\n  state: {\n    baseUrl: false,\n    username: false,\n    appname: false,\n  },\n  initialize: () => {},\n  disconnect: () => {},\n});\n\nexport const useHueContext = () => React.useContext(HueContext);\n","function generateUID() {\n    // I generate the UID from two parts here \n    // to ensure the random number provide enough bits.\n    var firstPart = (Math.random() * 46656) | 0;\n    var secondPart = (Math.random() * 46656) | 0;\n    firstPart = (\"000\" + firstPart.toString(36)).slice(-3);\n    secondPart = (\"000\" + secondPart.toString(36)).slice(-3);\n    return firstPart + \"\" + secondPart;\n}\nexport default generateUID;","export const Steps = {\n  START: 0,\n  CONSENT: 1,\n  BRIDGE: 2,\n  CONNECT: 3,\n};\n\nexport const getStepTitle = (step: number) => {\n  if (step === Steps.START) {\n    return \"Setup\";\n  }\n  if (step === Steps.CONSENT) {\n    return \"Data Storage\";\n  }\n  if (step === Steps.BRIDGE) {\n    return \"Hue Bridge\";\n  }\n  if (step === Steps.CONNECT) {\n    return \"Finish\";\n  }\n  return null;\n};\n","import {\n  Checkbox,\n  FormHelperText,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport React from \"react\";\nimport generateUID from \"./generateUID\";\nimport { useHueContext } from \"./HueContext\";\nimport { getStepTitle, Steps } from \"./useSteps\";\n\nexport interface ConfirmationDialogRawProps {\n  classes: Record<\"paper\", string>;\n  id: string;\n  keepMounted: boolean;\n  open: boolean;\n  onClose: () => void;\n  step: number;\n  next: () => void;\n}\n\nfunction ConfirmationDialogRaw(props: ConfirmationDialogRawProps) {\n  const { onClose, open, ...other } = props;\n  const [UID, setUID] = React.useState<string>(generateUID());\n\n  React.useEffect(() => {\n    if (!open) setUID(generateUID);\n  }, [open]);\n\n  //\n  React.useEffect(() => {\n    if (props.step === Steps.BRIDGE && !ip && !state.baseUrl) {\n      fetch(\"https://discovery.meethue.com/\")\n        .then((d) => d.json())\n        .then((bridges) => {\n          if (bridges && bridges.length > 0) {\n            setIp(bridges[0].internalipaddress);\n          }\n        });\n    }\n  }, [props.step]);\n\n  const { initialize, state } = useHueContext();\n\n  const [consent, setConsent] = React.useState<boolean>(false);\n  const [ip, setIp] = React.useState<string>(\"\");\n\n  const getTitle = React.useCallback(() => {\n    return getStepTitle(props.step);\n  }, [props]);\n\n  const handleOk = React.useCallback(() => {\n    if (props.step === Steps.CONNECT && consent && ip) {\n      fetch(`http://${ip}/api`, {\n        method: \"post\",\n        body: JSON.stringify({ devicetype: \"hue-react#\" + UID }),\n      })\n        .then((d) => d.json())\n        .then((d) => {\n          if (d.length === 1 && d[0].error && d[0].error.type === 101) {\n            console.log(\"ALERT: press connect button! @todo\");\n          } else if (d.length > 0 && d[0].success && d[0].success.username) {\n            initialize(ip, d[0].success.username, \"hue-react#\" + UID);\n            onClose();\n          } else {\n            console.error(\"unknown case @todo\", d);\n          }\n        });\n    }\n    if (props.step === Steps.START) {\n      props.next();\n    }\n    if (props.step === Steps.CONSENT) {\n      props.next();\n    }\n    if (props.step === Steps.BRIDGE) {\n      props.next();\n    }\n  }, [props, UID, initialize, consent, ip, onClose]);\n\n  if (state.baseUrl) {\n    return null;\n  }\n\n  const Content = () => {\n    if (props.step === Steps.START) {\n      return (\n        <Typography>Press Continue to start the Connection Wizard.</Typography>\n      );\n    }\n    if (props.step === Steps.CONSENT) {\n      return (\n        <>\n          <Typography>\n            Your data belongs to you. We need your consent to store it on this\n            device.\n          </Typography>\n          <FormControlLabel\n            control={\n              <Checkbox\n                required\n                checked={consent}\n                onChange={(e, v) => setConsent(v)}\n                name=\"consent\"\n              />\n            }\n            label=\"Allow Data Storage\"\n          />\n        </>\n      );\n    }\n    if (props.step === Steps.BRIDGE) {\n      return (\n        <>\n          <TextField\n            label=\"\"\n            value={ip}\n            variant=\"outlined\"\n            onChange={(e) => setIp(e.target.value)}\n          />\n          <FormHelperText>\n            Enter the IP address of the Hue Bridge on your local network. Make\n            sure your device is connected to the same network.\n          </FormHelperText>\n        </>\n      );\n    }\n    if (props.step === Steps.CONNECT) {\n      return (\n        <>\n          <Typography>\n            Now press the \"Connect\" hardware button on your Hue Bridge, then\n            press \"Finish\" below.\n          </Typography>\n          <Typography>\n            This will request permissions for this app (<i> react-app-{UID} </i>\n            ) in your Hue Bridge.\n          </Typography>\n        </>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <Dialog\n      disableEscapeKeyDown\n      maxWidth=\"xs\"\n      aria-labelledby=\"confirmation-dialog-title\"\n      open={open}\n      {...other}\n    >\n      <DialogTitle id=\"confirmation-dialog-title\">{getTitle()}</DialogTitle>\n      <DialogContent dividers>\n        <Content />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          disabled={!consent && props.step === Steps.CONSENT}\n          onClick={handleOk}\n          color=\"primary\"\n        >\n          {props.step === Steps.CONNECT ? \"Finish\" : \"Continue\"}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n    paper: {\n      width: \"80%\",\n      maxHeight: 435,\n    },\n  })\n);\n\nexport default function ConfirmationDialog() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const {\n    state: { baseUrl },\n  } = useHueContext();\n\n  React.useEffect(() => {\n    if (!baseUrl && !open) {\n      setStep(Steps.START);\n      setOpen(true);\n    }\n  }, [baseUrl, open]);\n\n  const handleClose = (newValue?: string) => {\n    setOpen(false);\n  };\n\n  const [step, setStep] = React.useState(Steps.START);\n\n  return (\n    <ConfirmationDialogRaw\n      classes={{\n        paper: classes.paper,\n      }}\n      id=\"ringtone-menu\"\n      keepMounted\n      step={step}\n      next={() => setStep(step + 1)}\n      open={open}\n      onClose={handleClose}\n    />\n  );\n}\n","import { useHueContext } from \"../HueContext\";\nimport { useQuery } from \"react-query\";\nimport { useMemo } from \"react\";\nimport { Config } from \"../clip/v1/config\";\n\nconst useConfig = () => {\n  const {\n    state: { baseUrl },\n  } = useHueContext();\n  const initialData = useMemo(() => ({} as Config), []);\n  const query = useQuery<Config, any>(`${baseUrl}/config`, {\n    queryFn: async () => {\n      const response = await fetch(`${baseUrl}/config`);\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return response.json();\n    },\n    initialData,\n  });\n\n  return useMemo(\n    () => ({\n      config: query.data || initialData,\n    }),\n    [initialData, query]\n  );\n};\nexport default useConfig;\n","import Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { Icon } from \"@material-ui/core\";\nimport React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHueContext } from \"./HueContext\";\nimport useConfig from \"./queries/config\";\n\nconst useCardStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  label: {\n    float: \"left\",\n    width: 150,\n  },\n});\n\nconst Bridge = () => {\n  const {\n    state: { appname },\n    disconnect,\n  } = useHueContext();\n  const { config } = useConfig();\n  const cardClasses = useCardStyles();\n  return (\n    <>\n      <Card className={cardClasses.root} variant=\"outlined\">\n        <CardContent>\n          <Typography\n            className={cardClasses.title}\n            color=\"textSecondary\"\n            gutterBottom\n          >\n            Connected with Hue Bridge\n          </Typography>\n          <Typography variant=\"h5\" component=\"h2\">\n            {config.name}\n          </Typography>\n          <Typography className={cardClasses.pos} color=\"textSecondary\">\n            Model: {config.modelid}\n          </Typography>\n          <Typography variant=\"body2\" component=\"div\">\n            <span className={cardClasses.label}>Mac Address</span>\n            {config.mac}\n            <br />\n            <span className={cardClasses.label}>IP Address</span>\n            {config.ipaddress}\n            <br />\n            <span className={cardClasses.label}>Zigbee Channel</span>\n            {config.zigbeechannel}\n            <br />\n            <span className={cardClasses.label}>App Name</span>\n            {appname || \"\"}\n            <br />\n          </Typography>\n        </CardContent>\n        <CardActions style={{ alignItems: \"right\" }}>\n          <Button\n            style={{ float: \"right\" }}\n            size=\"small\"\n            endIcon={<Icon className=\"fa fa-trash\" />}\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => {\n              if (window.confirm(\"disconnect from bridge and delete data?\")) {\n                disconnect();\n              }\n            }}\n          >\n            Disconnect\n          </Button>\n        </CardActions>\n      </Card>\n    </>\n  );\n};\n\nexport default Bridge;\n","import { useCallback, useMemo } from \"react\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport { RawLightsResponse } from \"../clip/v1/lights\";\nimport { Light } from \"../domain/models\";\nimport { useHueContext } from \"../HueContext\";\n\nconst useLights = () => {\n  const {\n    state: { baseUrl },\n  } = useHueContext();\n  const queryClient = useQueryClient();\n  const initialData = useMemo(() => ({} as RawLightsResponse), []);\n  const query = useQuery<RawLightsResponse, any>(`${baseUrl}/lights`, {\n    cacheTime: 10,\n    queryFn: async () => {\n      const response = await fetch(`${baseUrl}/lights`);\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return response.json();\n    },\n    initialData,\n  });\n\n  const refreshLights = useCallback(\n    () => queryClient.refetchQueries({ queryKey: `${baseUrl}/lights` }),\n    [baseUrl, queryClient]\n  );\n\n  const putJson = useCallback(\n    (url, body) =>\n      fetch(url, {\n        method: \"put\",\n        body: JSON.stringify(body),\n      }),\n    []\n  );\n\n  const setBrightness = useCallback(\n    async (key: number, newval: number) => {\n      await putJson(`${baseUrl}/lights/${key}/state`, { bri: newval });\n      refreshLights();\n    },\n    [baseUrl, refreshLights, putJson]\n  );\n\n  const toggle = useCallback(\n    async (light: Light) => {\n      await putJson(`${baseUrl}/lights/${light.id}/state`, {\n        on: !light.state.on,\n      });\n      refreshLights();\n    },\n    [baseUrl, refreshLights, putJson]\n  );\n\n  const shutDown = useCallback(async () => {\n    await putJson(`${baseUrl}/groups/0/action`, { on: false });\n    refreshLights();\n  }, [baseUrl, refreshLights, putJson]);\n\n  return useMemo(\n    () => ({\n      lights: query.data || initialData,\n      setBrightness,\n      toggle,\n      shutDown,\n    }),\n    [query, initialData, setBrightness, toggle, shutDown]\n  );\n};\nexport default useLights;\n","import { Icon, IconButton } from \"@material-ui/core\";\nimport useLights from \"./queries/lights\";\n\nconst Header = () => {\n  const { shutDown } = useLights();\n  return (\n    <div style={{ width: \"100%\", textAlign: \"center\" }}>\n      <IconButton\n        color=\"secondary\"\n        style={{\n          outline: \"none\",\n          border: \"none\",\n          width: 50,\n          height: 50,\n          fontSize: \"2em\",\n        }}\n        onClick={() => shutDown()}\n      >\n        <Icon className={\"fa fa-power-off\"} />\n      </IconButton>\n    </div>\n  );\n};\n\nexport default Header;\n","import MuiAccordion from \"@material-ui/core/Accordion\";\nimport { withStyles } from \"@material-ui/core\";\n\nconst Accordion = withStyles({\n  root: {\n    border: \"1px solid rgba(0, 0, 0, .125)\",\n    boxShadow: \"none\",\n    \"&:not(:last-child)\": {\n      borderBottom: 0,\n    },\n    \"&:before\": {\n      display: \"none\",\n    },\n    \"&$expanded\": {\n      margin: \"auto\",\n    },\n  },\n  expanded: {},\n})(MuiAccordion);\n\nexport default Accordion;\n","import MuiAccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport { withStyles } from \"@material-ui/core\";\n\nconst AccordionSummary = withStyles({\n  root: {\n    backgroundColor: \"rgba(0, 0, 0, .03)\",\n    borderBottom: \"1px solid rgba(0, 0, 0, .125)\",\n    marginBottom: -1,\n    minHeight: 56,\n    \"&$expanded\": {\n      minHeight: 56,\n    },\n  },\n  content: {\n    \"&$expanded\": {\n      margin: \"12px 0\",\n    },\n  },\n  expanded: {},\n})(MuiAccordionSummary);\n\nexport default AccordionSummary;\n","export const hueToFa = (hue: string) => {\n  //@todo move to json config\n  switch (hue) {\n    case \"Living room\":\n      return \"fa-tv\";\n    case \"Bathroom\":\n      return \"fa-toilet-paper\";\n    case \"Bedroom\":\n      return \"fa-bed\";\n    case \"Balcony\":\n      return \"fa-tree\";\n    case \"Garden\":\n      return \"fa-seedling\";\n    case \"Kitchen\":\n      return \"fa-coffee\";\n    case \"Front door\":\n      return \"fa-shoe-prints\";\n    case \"Reading\":\n      return \"fa-laptop-house\";\n  }\n  console.error(\"no icon for class:\" + hue);\n};\n","import { useHueContext } from \"../HueContext\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport { GroupsResponse } from \"../clip/v1/groups\";\nimport { useCallback, useMemo } from \"react\";\nimport { Room } from \"../domain/models\";\n\nconst useGroups = () => {\n  const queryClient = useQueryClient();\n  const {\n    state: { baseUrl },\n  } = useHueContext();\n  const initialData = useMemo(() => ({} as GroupsResponse), []);\n  const query = useQuery<GroupsResponse, any>(`${baseUrl}/groups`, {\n    cacheTime: 10,\n    queryFn: async () => {\n      const response = await fetch(`${baseUrl}/groups`);\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return response.json();\n    },\n    initialData,\n  });\n\n  const refreshGroups = useCallback(\n    () => queryClient.refetchQueries({ queryKey: `${baseUrl}/groups` }),\n    [baseUrl, queryClient]\n  );\n\n  const toggle = useCallback(\n    async (elem: Room) => {\n      const payload = { on: !elem.state.any_on };\n      await fetch(`${baseUrl}/groups/${elem.id}/action`, {\n        method: \"put\",\n        body: JSON.stringify(payload),\n      });\n      refreshGroups();\n    },\n    [baseUrl, refreshGroups]\n  );\n\n  return useMemo(\n    () => ({\n      groups: query.data || initialData,\n      toggle,\n    }),\n    [initialData, query, toggle]\n  );\n};\nexport default useGroups;\n","import { Box, Grid, Icon, Switch, Typography } from \"@material-ui/core\";\nimport AccordionSummary from \"./AccordionSummary\";\nimport { hueToFa } from \"./HueIcon\";\nimport useGroups from \"./queries/groups\";\nimport { Room as RoomModel } from \"./domain/models\";\n\nconst Room = ({ room }: { room: RoomModel }) => {\n  const { toggle } = useGroups();\n  return (\n    <AccordionSummary aria-controls=\"panel1d-content\" id=\"panel1d-header\">\n      <Grid style={{ width: \"100%\" }} container>\n        <Box display=\"flex\" flexGrow={1} style={{ margin: \"auto\" }}>\n          <Icon className={`fa ${hueToFa(room.class)}`} style={{ width: 45 }} />\n          <Typography>{room.name}</Typography>\n        </Box>\n        <Box>\n          <Switch\n            checked={room.state.any_on}\n            onClick={(e) => e.stopPropagation()}\n            onChange={(e) => {\n              e.stopPropagation();\n              toggle(room);\n            }}\n            color=\"primary\"\n            inputProps={{ \"aria-label\": \"primary checkbox\" }}\n          />\n        </Box>\n      </Grid>\n    </AccordionSummary>\n  );\n};\n\nexport default Room;\n","import { ListItemIcon } from \"@material-ui/core\";\n\nconst productToIcon = (icon: string) => {\n  if (icon === \"On/Off plug\") return \"fa fa-plug\";\n  if (icon === \"Hue lightstrip plus\") return \"fa fa-tape\";\n  if (icon === \"Hue color candle\") return \"fa fa-fire\";\n  if (icon === \"Hue color lamp\") return \"fas fa-lightbulb\";\n  if (icon === \"Hue color spot\") return \"fas fa-lightbulb\";\n  return \"far fa-lightbulb\";\n};\n\nconst ProductIcon = ({ productname }: { productname: string }) => {\n  return (\n    <ListItemIcon\n      style={{ fontSize: \"1.5em\", margin: \"auto\" }}\n      className={productToIcon(productname)}\n    />\n  );\n};\n\nexport default ProductIcon;\n","import { useHueContext } from \"../HueContext\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport { useCallback, useMemo } from \"react\";\nimport { ScenesReponse } from \"../clip/v1/scenes\";\nimport { Scene } from \"../domain/models\";\n\nconst useScenes = () => {\n  const queryClient = useQueryClient();\n  const {\n    state: { baseUrl },\n  } = useHueContext();\n  const initialData = useMemo(() => ({} as ScenesReponse), []);\n  const query = useQuery<ScenesReponse, any>(`${baseUrl}/scenes`, {\n    queryFn: async () => {\n      const response = await fetch(`${baseUrl}/scenes`);\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return response.json();\n    },\n    initialData,\n  });\n\n  const activate = useCallback(\n    async (scene: Scene) => {\n      const payload = { scene: scene.id };\n      await fetch(`${baseUrl}/groups/${scene.group}/action`, {\n        method: \"put\",\n        body: JSON.stringify(payload),\n      });\n      queryClient.refetchQueries();\n    },\n    [baseUrl, queryClient]\n  );\n\n  return useMemo(\n    () => ({\n      scenes: query.data || initialData,\n      activate,\n    }),\n    [initialData, query, activate]\n  );\n};\nexport default useScenes;\n","import { useMemo } from \"react\";\nimport { GroupsResponseObj } from \"../clip/v1/groups\";\nimport { LightsReponseObj } from \"../clip/v1/lights\";\nimport { SceneObject } from \"../clip/v1/scenes\";\nimport useGroups from \"../queries/groups\";\nimport useLights from \"../queries/lights\";\nimport useScenes from \"../queries/scenes\";\n\nexport interface Room extends GroupsResponseObj<Light, Scene> {\n  id: number;\n  scenes: Scene[];\n  lights: Light[];\n}\n\nexport interface Scene extends SceneObject {\n  id: string;\n}\n\nexport interface Light extends LightsReponseObj {\n  id: number;\n}\n\nexport const useRooms = () => {\n  const { groups } = useGroups();\n  const { lights } = useLights();\n  const { scenes } = useScenes();\n  return useMemo<Room[]>(\n    () =>\n      Object.keys(groups)\n        .map((k) => parseInt(k))\n        .map((id: number) => ({\n          //map regular group properties to room, preserving id inside the new object\n          ...groups[id],\n          id,\n          //map lights by replacing ID array with objects, preserving ID inside the object\n          lights: groups[id].lights.map((l) => ({\n            ...lights[parseInt(l)],\n            id: parseInt(l),\n          })),\n          //find scenes with matching group id, preserving ID inside the object\n          scenes: Object.keys(scenes)\n            .filter(\n              (s) =>\n                !scenes[s].recycle &&\n                scenes[s].type === \"GroupScene\" &&\n                parseInt(scenes[s].group) === id\n            )\n            .map((s) => ({ ...scenes[s], id: s })),\n        })),\n    [groups, lights, scenes]\n  );\n};\n","import { Slider } from \"@material-ui/core\";\nimport { Light } from \"../domain/models\";\nimport useLights from \"../queries/lights\";\n\nexport const BrightnessSlider = ({ light }: { light: Light }) => {\n  const { setBrightness } = useLights();\n  return light.state.bri ? (\n    <Slider\n      disabled={!light.state.on}\n      min={1}\n      max={254}\n      value={light.state.bri}\n      onChangeCommitted={(e, val) => setBrightness(light.id, val as any)}\n      aria-labelledby=\"continuous-slider\"\n    />\n  ) : null;\n};\n","import Switch from \"@material-ui/core/Switch\";\nimport { Light } from \"../domain/models\";\nimport useLights from \"../queries/lights\";\n\nexport const LightSwitch = ({ light }: { light: Light }) => {\n  const { toggle } = useLights();\n  return (\n    <Switch\n      size=\"small\"\n      checked={!!light.state.on}\n      onChange={() => toggle(light)}\n    />\n  );\n};\n","import {\n  AccordionDetails,\n  Box,\n  Divider,\n  List,\n  ListItem,\n  ListItemText,\n} from \"@material-ui/core\";\nimport Accordion from \"./Accordion\";\nimport React from \"react\";\nimport Room from \"./Room\";\nimport ProductIcon from \"./ProductIcon\";\nimport { useRooms } from \"./domain/models\";\nimport { BrightnessSlider } from \"./components/BrightnessSlider\";\nimport { LightSwitch } from \"./components/LightSwitch\";\n\nconst Lights = () => {\n  const [expanded, setExpanded] = React.useState<number | false>(false);\n  const rooms = useRooms();\n  return (\n    <>\n      {rooms.map((room) => (\n        <Accordion\n          key={room.id}\n          square\n          expanded={expanded === room.id}\n          onChange={(e, newExpanded) =>\n            setExpanded(newExpanded ? room.id : false)\n          }\n        >\n          <Room room={room} />\n          <AccordionDetails>\n            <List\n              aria-label=\"secondary\"\n              color=\"default\"\n              style={{\n                width: \"100%\",\n                fontSize: \"1.25em\",\n              }}\n            >\n              {room.lights.map((light) => (\n                <React.Fragment key={light.id}>\n                  <ListItem\n                    style={{\n                      flexDirection: \"column\",\n                      margin: 0,\n                      padding: 0,\n                    }}\n                  >\n                    <Box width=\"100%\" display=\"flex\" flexDirection=\"row\">\n                      <Box display=\"flex\" flexGrow={1}>\n                        <ProductIcon productname={light.productname} />\n                        <ListItemText\n                          primary={light.name}\n                          secondary={light.productname}\n                        />\n                      </Box>\n                      <Box>\n                        <LightSwitch light={light} />\n                      </Box>\n                    </Box>\n\n                    <BrightnessSlider light={light} />\n                  </ListItem>\n                  {!light.state.bri && (\n                    <Divider\n                      key={light.id + \"d\"}\n                      style={{ marginBottom: 13, marginTop: 14 }}\n                    />\n                  )}\n                </React.Fragment>\n              ))}\n            </List>\n          </AccordionDetails>\n        </Accordion>\n      ))}\n    </>\n  );\n};\nexport default Lights;\n","import {\n  AccordionDetails,\n  Box,\n  Button,\n  Divider,\n  List,\n  ListItem,\n  ListItemText,\n} from \"@material-ui/core\";\n\nimport Accordion from \"./Accordion\";\nimport React from \"react\";\nimport Room from \"./Room\";\nimport useScenes from \"./queries/scenes\";\nimport { useRooms } from \"./domain/models\";\n\nconst Scenes = () => {\n  const [expanded, setExpanded] = React.useState<number | false>(false);\n  const { activate } = useScenes();\n  const rooms = useRooms();\n\n  return (\n    <>\n      {rooms.map((room) => (\n        <Accordion\n          key={room.name}\n          square\n          expanded={expanded === room.id}\n          onChange={(e, newExpanded) =>\n            setExpanded(newExpanded ? room.id : false)\n          }\n        >\n          <Room room={room} />\n          <AccordionDetails>\n            <List\n              aria-label=\"secondary\"\n              color=\"default\"\n              style={{\n                width: \"100%\",\n                fontSize: \"1.25em\",\n              }}\n            >\n              {room.scenes.map((scene) => (\n                <>\n                  <ListItem\n                    key={scene.id}\n                    style={{\n                      flexDirection: \"column\",\n                      margin: 0,\n                      padding: 0,\n                    }}\n                  >\n                    <Box width=\"100%\" display=\"flex\" flexDirection=\"row\">\n                      <Box display=\"flex\" flexGrow={1}>\n                        <ListItemText primary={scene.name} />\n                      </Box>\n                      <Box>\n                        <Button\n                          size=\"small\"\n                          variant=\"outlined\"\n                          onClick={() => activate(scene)}\n                        >\n                          Activate\n                        </Button>\n                      </Box>\n                    </Box>\n                  </ListItem>\n                  <Divider style={{ marginBottom: 13, marginTop: 14 }} />\n                </>\n              ))}\n            </List>\n          </AccordionDetails>\n        </Accordion>\n      ))}\n    </>\n  );\n};\nexport default Scenes;\n","import \"./battery.scss\";\n\nimport React from \"react\";\n\nconst Battery = (props: { level: number }) => {\n  return (\n    <div style={{ margin: \"auto\" }}>\n      <div className=\"battery\">\n        <div\n          className=\"battery-level\"\n          style={{ height: props.level + \"%\" }}\n        ></div>\n      </div>\n    </div>\n  );\n};\nexport default Battery;\n","import {\n  Box,\n  Card,\n  CardActions,\n  CardHeader,\n  Chip,\n  Icon,\n} from \"@material-ui/core\";\n\nimport Battery from \"./Battery\";\nimport React from \"react\";\nimport { Sensor as AbstractSensor } from \"./clip/v1/sensors\";\n\n//@todo move to json\nconst roomToFa = (room: string) => {\n  switch (room) {\n    case \"Living\":\n    case \"Living room\":\n      return \"fa-tv\";\n    case \"Bathroom\":\n    case \"Bath\":\n      return \"fa-toilet-paper\";\n    case \"Bed\":\n    case \"Bedroom\":\n      return \"fa-bed\";\n    case \"Balcony\":\n      return \"fa-tree\";\n    case \"Plants\":\n    case \"Greenhouse\":\n      return \"fa-seedling\";\n    case \"Kitchen\":\n      return \"fa-coffee\";\n    case \"Entrance\":\n    case \"entrance\":\n      return \"fa-shoe-prints\";\n    case \"Office\":\n    case \"Bib\":\n      return \"fa-laptop-house\";\n  }\n  console.error(\"no icon for room:\" + room);\n};\n\nconst iconStyle = {\n  width: \"auto\",\n  height: \"auto\",\n  margin: \"auto\",\n  fontSize: \"0.8em\",\n  paddingLeft: \"10px\",\n};\n\nconst FooterChip = (props: {\n  icon: string;\n  label: number | string;\n  opacity?: number;\n}) => {\n  return (\n    <Chip\n      style={{ backgroundColor: `rgba(144,202,253,${props.opacity})` }}\n      variant=\"outlined\"\n      size=\"small\"\n      icon={<Icon style={iconStyle} className={`fa fa-${props.icon}`} />}\n      label={props.label}\n    />\n  );\n};\n\nconst toUtc = (date: any) => {\n  var now_utc = Date.UTC(\n    date.getUTCFullYear(),\n    date.getUTCMonth(),\n    date.getUTCDate(),\n    date.getUTCHours(),\n    date.getUTCMinutes(),\n    date.getUTCSeconds()\n  );\n\n  return now_utc;\n};\n\nconst Sensor = (props: {\n  //@todo use Device class\n  model: {\n    model: AbstractSensor;\n    light: AbstractSensor;\n    temperature: AbstractSensor;\n    presence: AbstractSensor;\n    switch: AbstractSensor;\n  };\n}) => {\n  //@todo use bridge-timezone from API to correct calculation?\n  const diffToNow = React.useCallback(() => {\n    if (!props.model.model) return null;\n    const then = new Date(props.model?.model?.state?.lastupdated);\n\n    const now_utc = toUtc(new Date(Date.now()));\n    const diff = now_utc - toUtc(then);\n    //@todo why utc doesn't work? remove - 60 minutes hack\n    const roundedMinutes = Math.floor(diff / 1000 / 60) - 60;\n\n    if (roundedMinutes >= 60) {\n      const hours = Math.floor(roundedMinutes / 60);\n      if (hours > 24) {\n        const days = Math.floor(hours / 24);\n        return days + \" days ago\";\n      }\n      return hours + \" hours ago\";\n    }\n    if (roundedMinutes === 0) {\n      return \"now\";\n    }\n    if (roundedMinutes === 1) {\n      return \"1 minute ago\";\n    }\n    return roundedMinutes + \" minutes ago\";\n  }, [props]);\n\n  const buttonEventToStr = (buttonevent: number) => {\n    if (buttonevent === 1002) return \"on\";\n    if (buttonevent === 2002) return \"dim +\";\n    if (buttonevent === 3002) return \"dim -\";\n    if (buttonevent === 4002) return \"off\";\n    //@todo map tap switch button events\n    return \"\";\n  };\n\n  return (\n    <Card variant=\"outlined\">\n      <CardHeader\n        avatar={\n          <Icon\n            style={{ margin: \"auto\", width: \"auto\" }}\n            className={\"fa \" + roomToFa(props.model?.model?.name.split(\" \")[0])}\n          />\n        }\n        title={props.model.model.name}\n        action={\n          props.model?.model?.config?.battery ? (\n            <Battery level={props.model.model.config.battery} />\n          ) : null\n        }\n        subheader={diffToNow()}\n      />\n\n      <CardActions>\n        <Box\n          width=\"100%\"\n          display=\"flex\"\n          justifyContent=\"space-between\"\n          alignContent=\"center\"\n        >\n          {props.model.light?.state?.lightlevel && (\n            <Box>\n              <FooterChip\n                icon={props.model.light?.state.dark ? \"moon\" : \"sun\"}\n                label={props.model.light?.state?.lightlevel}\n                opacity={props.model.light?.state?.lightlevel / 33000}\n              />\n            </Box>\n          )}\n          {props.model.temperature?.state?.temperature && (\n            <Box>\n              <FooterChip\n                icon=\"thermometer\"\n                label={`${(\n                  props.model.temperature.state.temperature / 100\n                ).toFixed(2)}°C`}\n              />\n            </Box>\n          )}\n          {props.model.presence?.state && (\n            <Box>\n              {props.model.presence?.state?.presence && (\n                <FooterChip icon=\"eye\" label=\"Presence\" />\n              )}\n              {!props.model.presence?.state?.presence && (\n                <FooterChip icon=\"eye-slash\" label=\"No presence\" />\n              )}\n            </Box>\n          )}\n\n          {props.model.switch?.state?.buttonevent && (\n            <Box>\n              {props.model.switch?.state?.buttonevent && (\n                <FooterChip\n                  icon=\"hand-point-down\"\n                  label={\n                    \"last button pressed: \" +\n                    buttonEventToStr(props.model.switch?.state?.buttonevent)\n                  }\n                />\n              )}\n            </Box>\n          )}\n        </Box>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default Sensor;\n","export interface Sensor {\n  key: string;\n  state: State;\n  config: Config;\n  name: string;\n  type: string;\n  modelid: string;\n  manufacturername: string;\n  swversion: string;\n  uniqueid: string;\n  recycle?: boolean;\n  swupdate: Swupdate;\n  productname: string;\n  diversityid: string;\n  capabilities: Capabilities;\n}\n\nexport const SENSOR_TYPES = {\n  Daylight: \"Daylight\",\n  LightLevel: \"ZLLLightLevel\",\n  Temperature: \"ZLLTemperature\",\n  Presence: \"ZLLPresence\",\n  Generic: \"CLIPGenericStatus\",\n  TapSwitch: \"ZGPSwitch\",\n  DimmerSwitch: \"ZLLSwitch\",\n};\n\n//keep the enum\n//sensors must be merged into devices\n//invent the device model with its specific incarnations\n//Motion Detector with Presence Sensor and Temperature Sensor\n//Dimmer Switch and Tap Switch\n//keep the interface expandable\n\nexport interface SensorRootObject {\n  [id: string]: Sensor;\n}\n\nexport interface Capabilities {\n  certified: boolean;\n  primary: boolean;\n  inputs: Input[];\n}\n\nexport interface Input {\n  repeatintervals: number[];\n  events: Event[];\n}\n\nexport interface Swupdate {\n  state: string;\n  lastinstall?: Date;\n}\n\nexport interface Event {\n  buttonevent: number;\n  eventtype: string;\n}\n\nexport interface Config {\n  on: boolean;\n  configured: boolean;\n  battery?: number;\n  pending: any[];\n  reachable?: boolean;\n  usertest?: boolean;\n  sunriseoffset: number;\n  sunsetoffset: number;\n  sensitivity?: number;\n  sensitivitymax?: number;\n  alert: string;\n  ledindication?: boolean;\n  tholddark?: number;\n  tholdoffset?: number;\n}\n\nexport interface State {\n  lastupdated: any;\n  flag?: boolean;\n  status?: number;\n  dark?: boolean;\n  presence: boolean;\n  temperature: number;\n  daylight: boolean;\n  lightlevel: number;\n  buttonevent: number;\n}\n","import { useHueContext } from \"../HueContext\";\nimport { useQuery } from \"react-query\";\nimport { useMemo } from \"react\";\nimport { SensorRootObject, SENSOR_TYPES } from \"../clip/v1/sensors\";\n\n//@todo map to devices instead\nconst groupSwitchesById = (switches: any) => {\n  const dict: { [name: string]: any } = {};\n  Object.keys(switches)\n    .map((key) => switches[parseInt(key)])\n    .forEach((sensor) => {\n      if (sensor && sensor.uniqueid) {\n        const sensorGroupId = sensor.uniqueid.substring(0, 26);\n\n        const create = () => {\n          if (!dict[sensorGroupId]) {\n            dict[sensorGroupId] = {};\n          }\n        };\n        if (\n          sensor.type === SENSOR_TYPES.DimmerSwitch ||\n          sensor.type === SENSOR_TYPES.TapSwitch\n        ) {\n          create();\n          dict[sensorGroupId].model = sensor;\n          dict[sensorGroupId].switch = sensor;\n        }\n      }\n    });\n\n  return dict;\n};\n\n//@todo map to devices instead\nconst groupSensorsById = (sensors: any) => {\n  const dict: { [name: string]: any } = {};\n  Object.keys(sensors)\n    .map((key) => sensors[parseInt(key)])\n    .forEach((sensor) => {\n      if (sensor && sensor.uniqueid) {\n        const sensorGroupId = sensor.uniqueid.substring(0, 26);\n\n        const create = () => {\n          if (!dict[sensorGroupId]) {\n            dict[sensorGroupId] = {};\n          }\n        };\n\n        //@todo exclude CLIPGenericStatus sensors\n        //@todo ignore DayLightSensor\n\n        if (sensor.type === SENSOR_TYPES.Temperature) {\n          create();\n          dict[sensorGroupId].temperature = sensor;\n        }\n        if (sensor.type === SENSOR_TYPES.LightLevel) {\n          create();\n          dict[sensorGroupId].light = sensor;\n        }\n        if (sensor.type === SENSOR_TYPES.Presence) {\n          create();\n          dict[sensorGroupId].model = sensor;\n          dict[sensorGroupId].name = sensor.name;\n          dict[sensorGroupId].presence = sensor;\n        }\n      }\n    });\n  return dict;\n};\n\nconst useAccessories = () => {\n  const {\n    state: { baseUrl },\n  } = useHueContext();\n  const initialData = useMemo(() => ({} as SensorRootObject), []);\n  const query = useQuery<SensorRootObject, any>(`${baseUrl}/sensors`, {\n    queryFn: async () => {\n      const response = await fetch(`${baseUrl}/sensors`);\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return response.json();\n    },\n    initialData,\n  });\n\n  return useMemo(\n    () => ({\n      sensors: groupSensorsById(query.data || initialData),\n      switches: groupSwitchesById(query.data || initialData),\n    }),\n    [initialData, query]\n  );\n};\nexport default useAccessories;\n","import { Paper } from \"@material-ui/core\";\nimport Sensor from \"./SensorCard\";\nimport useAccessories from \"./queries/accessories\";\n\nconst Sensors = () => {\n  const { sensors } = useAccessories();\n  return (\n    <Paper placeholder=\"loading\">\n      {Object.keys(sensors)\n        .map((key) => sensors[key])\n        .map((sensor, si) => (\n          <Sensor key={si} model={sensor} />\n        ))}\n    </Paper>\n  );\n};\n\nexport default Sensors;\n","import { Paper } from \"@material-ui/core\";\nimport Sensor from \"./SensorCard\";\nimport useAccessories from \"./queries/accessories\";\n\nconst Switches = () => {\n  const { switches } = useAccessories();\n  return (\n    <Paper placeholder=\"loading\">\n      {Object.keys(switches)\n        .map((key) => switches[key])\n        .map((sensor, si) => (\n          <Sensor key={si} model={sensor} />\n        ))}\n    </Paper>\n  );\n};\n\nexport default Switches;\n","import { Box } from \"@material-ui/core\";\nimport React from \"react\";\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, index, ...other } = props;\n\n  return (\n    <div\n      style={{ height: \"100%\" }}\n      role=\"tabpanel\"\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      <Box>{children}</Box>\n    </div>\n  );\n}\n\nexport default TabPanel;\n","import { AppBar, Icon, Theme, makeStyles } from \"@material-ui/core\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\n\nimport Bridge from \"./Bridge\";\nimport Header from \"./Header\";\nimport Lights from \"./Lights\";\nimport React from \"react\";\nimport Scenes from \"./Scenes\";\nimport Sensors from \"./Sensors\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport Switches from \"./Switches\";\nimport Tab from \"@material-ui/core/Tab\";\nimport TabPanel from \"./TabPanel\";\nimport Tabs from \"@material-ui/core/Tabs\";\n\nconst tabs = [\n  { icon: \"fa-photo-video\", label: \"Scenes\", route: \"/Scenes\" },\n  { icon: \"fa-lightbulb\", label: \"Lights\", route: \"/Lights\" },\n  { icon: \"fa-random\", label: \"Switches\", route: \"/Switches\" },\n  { icon: \"fa-thermometer-half\", label: \"Sensors\", route: \"/Sensors\" },\n  { icon: \"fa-plug\", label: \"Bridge\", route: \"/Bridge\" },\n];\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  wrapper: {\n    flexDirection: \"row\",\n  },\n}));\n\nfunction TabNav(props: RouteComponentProps<any>) {\n  const getPathIndex = React.useCallback(() => {\n    const found = tabs.findIndex((t) => t.route === props.location.pathname);\n    return found > 0 ? found : 0;\n  }, [props]);\n\n  const handleTabChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    props.history.push(tabs[newValue].route);\n    //@todo refresh\n  };\n\n  const handleSwipeTab = (newValue: number) => {\n    props.history.push(tabs[newValue].route);\n    //@todo refresh\n  };\n\n  const classes = useStyles();\n\n  return (\n    <div\n      style={{\n        width: \"100vw\",\n        maxWidth: 400,\n        margin: \"auto\",\n        height: \"100vh\",\n      }}\n    >\n      <AppBar position=\"static\" color=\"default\">\n        <Header />\n        <Tabs\n          onChange={handleTabChange}\n          scrollButtons=\"auto\"\n          variant=\"scrollable\"\n          className={classes.wrapper}\n          value={getPathIndex()}\n        >\n          {tabs.map((tab, ti) => (\n            <Tab\n              key={ti}\n              style={{ fontSize: \"0.9em\", width: 85 }}\n              icon={<Icon className={\"fa \" + tab.icon} />}\n              label={tab.label}\n            />\n          ))}\n        </Tabs>\n      </AppBar>\n      <SwipeableViews\n        style={{ height: \"100%\" }}\n        containerStyle={{ height: \"100%\" }}\n        index={getPathIndex()}\n        onChangeIndex={handleSwipeTab}\n        disableLazyLoading\n        animateTransitions={false}\n      >\n        <TabPanel index={0}>\n          <Scenes />\n        </TabPanel>\n        <TabPanel index={1}>\n          <Lights />\n        </TabPanel>\n        <TabPanel index={2}>\n          <Switches />\n        </TabPanel>\n        <TabPanel index={3}>\n          <Sensors />\n        </TabPanel>\n        <TabPanel index={4}>\n          <Bridge />\n        </TabPanel>\n      </SwipeableViews>\n    </div>\n  );\n}\n\nexport default withRouter(TabNav);\n","import { CssBaseline, ThemeProvider, createTheme } from \"@material-ui/core\";\nimport {\n  HueContext,\n  disconnect,\n  initialize,\n  useDefaultHueState,\n} from \"./HueContext\";\n\nimport { BrowserRouter } from \"react-router-dom\";\nimport ConfirmationDialog from \"./Setup\";\nimport React from \"react\";\nimport TabNav from \"./TabNav\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nfunction App() {\n  const hueState = useDefaultHueState();\n  const hueContext = {\n    state: hueState,\n    initialize: (ip: string, username: string, appname: string) =>\n      initialize(hueState, ip, username, appname),\n    disconnect: () => disconnect(hueState),\n  };\n\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n  const theme = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          type: prefersDarkMode ? \"dark\" : \"light\",\n        },\n      }),\n    [prefersDarkMode]\n  );\n  const queryClient = new QueryClient();\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <HueContext.Provider value={hueContext}>\n          <BrowserRouter>\n            {hueContext.state.baseUrl && <TabNav />}\n            <ConfirmationDialog />\n          </BrowserRouter>\n        </HueContext.Provider>\n      </ThemeProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","export const createBaseUrl = (ip: string, token: string) =>\n  `http://${ip}/api/${token}`;\n","import App from \"./App\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}